{"version":3,"sources":["store/thunks/fetchComputers.js","store/thunks/addComputer.js","store/thunks/deleteComputer.js","store/thunks/updateComputer.js","store/slices/computersSlice.js","store/thunks/fetchSystems.js","store/slices/systemsSlice.js","store/thunks/fetchLogs.js","store/slices/logsSlice.js","store/thunks/fetchUsers.js","store/thunks/addUser.js","store/thunks/deleteUser.js","store/thunks/updateUser.js","store/slices/usersSlice.js","store/slices/customTableSlice.js","store/index.js","Lists/index.js","Components/ComputerFormAdd.js","Hooks/useThunk.js","Components/PlaceAnimation.js","Components/ComputerFormEdit.js","Components/CustomCarusel.js","Components/CustomToast.js","authConfig.js","Components/SignInButton.jsx","Components/SignOutButton.jsx","Components/UserProfileButton.js","Components/Header.js","Contexts/login.js","Components/ProfileData.jsx","Components/Login.js","Components/Logout.js","Components/TableBody.js","Reports/Inwetnaryzacja.js","Components/TableCustom.js","Components/TableHeader.js","Components/UserFormAdd.js","Components/UserFormEdit.js","Components/UserInventoryShowModal.js","Components/UserListItem.jsx","Components/RotateThing.js","Reports/ProtokolKomputer.js","Screens/ComputersScreen.js","Screens/HomeScreen.js","Screens/LogsScreen.js","Screens/UsersScreen.js","graph.js","Screens/UserProfileScreen.js","App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","fetchComputers","createAsyncThunk","_asyncToGenerator","_callee","response","_context","axios","get","data","computers","addComputer","_ref","computer","post","console","log","_x","apply","arguments","deleteComputer","item","updateComputer","InitailDataComputersCount","localStorage","getItem","computersSlice","createSlice","initialState","isLoading","dataComputers","dataComputersCount","dataComputerByUserId","search","dataComputerById","sortField","sortOrder","showToast","msgToast","reducers","closeToast","action","getDataComputersCount","getDataComputerByUserId","find","user_id","payload","getDataComputerById","computer_id","searchComputer","sortComputers","sorted","_toConsumableArray","sort","a","b","toString","localeCompare","numeric","extraReducers","builder","addCase","pending","fulfilled","filter","c","computerName","toLowerCase","includes","sn","setItem","JSON","stringify","rejected","message","concat","index","findIndex","_objectSpread","_computersSlice$actio","actions","computersReducer","reducer","fetchSystems","systems","systemsSlice","dataSystems","firstDataSystem","getFirstDataSystem","id","systemsReducer","_systemsSlice$actions","getSystems","fetchLogs","logs","initialFilters","tabela","nazwa","akcja","kto","logsSlice","dataLogs","filteredData","filters","sliceData","filterRun","filtersClear","setPaginateSlice","sortLogs","_state$filters","current","co","logsReducer","_logsSlice$actions","getLogs","fetchUsers","users","addUser","user","deleteUser","updateUser","InitailDataUsersCount","usersSlice","dataUsers","firstDataUser","dataUsersCount","dataUser","rowsPerPage","getDataUserById","setRowsPerPage","searchUser","sortUsers","u","surname","usersReducer","_usersSlice$actions","getUsers","customTableSlice","setTableRowsPerPage","customTableReducer","store","configureStore","customTable","aplikacjeOptions","label","ComputersTypesOptions","ComputerFormAdd","show","close","handleAddSubmit","_useSelector","useSelector","_useSelector2","dispatch","useDispatch","accounts","useMsal","_useState","useState","username","owner","_slicedToArray","_useState3","typ","model","_useState4","errors","setErrors","_useState5","_useState6","setComputerName","_useState7","_useState8","setSn","_useState9","_useState10","setTyp","_useState11","_useState12","setModel","_useState13","_useState14","ram","setRam","_useState15","_useState16","wartosc","setWartosc","_useState17","parseInt","_useState18","system_id","setSystem_id","_useState19","_useState20","setUser_id","_useState21","_useState22","aplications","setAplications","useEffect","checkLenghInput","min","max","input","valueToCheck","_defineProperty","handleSubmit","e","opsSystems","map","s","opsUsers","React","createElement","Fragment","Modal","size","Header","closeButton","onClick","Title","Body","Form","onSubmit","Row","Col","Group","className","controlId","Control","placeholder","onChange","target","autoFocus","Alert","Select","options","defaultValue","isSearchable","typError","modelError","minLength","maxLength","ramError","wartoscError","isMulti","v","Footer","Button","variant","useThunk","thunk","_useState2","setIsLoading","isError","setIsError","useCallback","unwrap","finally","setTimeout","PlaceAnimation","times","rows","render","Array","fill","Placeholder","as","animation","xs","ComputerFormEdit","handleEditSubmit","updater","_useThunk","_useThunk2","doFetchSystems","isLoadingSystems","isErrorSystems","_useThunk3","_useThunk4","doFetchUsers","isLoadingUsers","isErrorUsers","computerNameError","setComputerNameError","parse","contentSystems","test","computerToUpdate","firstSystem","Label","contentUsers","firstUser","rcp","aria-labelledby","centered","CustomCarousel","setIndex","Carousel","activeIndex","onSelect","selectedIndex","Item","Caption","CustomToast","msg","aria-live","aria-atomic","style","left","position","minHeight","Toast","autohide","delay","top","right","loginRequest","scopes","graphConfig","graphMeEndpoint","graphGroupsEndpoint","SignInButton","instance","Nav","Link","loginPopup","SignOutButton","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","UserProfileButton","children","href","isAuthenticated","useIsAuthenticated","profileName","Navbar","bg","expand","Container","Brand","Image","src","width","height","alt","Toggle","aria-controls","Collapse","Badge","NavDropdown","title","createContext","LoginContext","ProfileData","props","Card","ListGroup","graphData","givenName","userPrincipalName","jobTitle","mobilePhone","officeLocation","Login","setName","event","preventDefault","alert","Logout","logoutRedirect","account","getActiveAccount","onRedirectNavigate","BrowserUtils","isInIframe","TableBody","columns","tableData","editRow","deleteRow","podgladRow","_ref2","accessor","MdListAlt","MdEdit","MdDelete","tData","strData","isJsonObject","Inwentaryzacja","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","saveAs","exportToCSV","TableCustom","handleSort","Date","toLocaleDateString","currentPage","setCurrentPage","Math","ceil","countPages","setCountPages","setSliceData","showMore","setShowMore","range","itemsPagination","_","Pagination","color","active","page","Table","responsive","striped","bordered","hover","TableHeader","handleSorting","sm","aria-label","newRowsPerPage","newCountPages","disabled","font","First","Prev","Ellipsis","Next","Last","nanoid","sortable","iconSort","FaArrowAltCircleUp","FaArrowAltCircleDown","handleSortingChange","UserFormAdd","userNameError","setUserNameError","login","email","dzial","inputs","setInputs","handleChange","_objectSpread2","hidden","UserFormEdit","nameError","setNameError","UserInventoryShowModal","userComputer","dialogClassName","rotate","keyframes","_templateObject","_taggedTemplateLiteral","RotateThing","styled","div","_templateObject2","ProtokolKomputer","result1","TabelaNaglowek","T","columnWidths","TableRow","TableCell","WidthType","DXA","Paragraph","TabelaOpracowal","rowsTabelaSpecyfikacjaKomputera","TabelaSpecyfikacjaKomputera","doc","Document","creator","description","styles","paragraphStyles","basedOn","quickFormat","run","italics","sections","properties","TextRun","text","bold","userName","userRcp","Packer","toBlob","blob","ComputersScreen","doFetchComputers","isLoadingComputers","isErrorComputers","doUpdateComputer","isLoadingUpdateComputer","isErrorUpdaterComputer","_useThunk5","_useThunk6","doAddComputer","isLoadingAddComputer","isErrorAddComputer","_useThunk7","_useThunk8","doDeleteComputer","isLoadingDeleteComputer","isErrorDeleteComputer","showComputerAddModal","setComputerAddModal","showComputerEditModal","setComputerEditModal","setComputer","content","MdAdd","Wrapper","Slupek","attrs","$widthSlupek","$width","HomeScreen","_useSelector4","arrayToRender","count","counted","updated_at","LogsScreen","doFetchLogs","isLoadingLogs","isErrorLogs","contentFilters","tabele","unikalne_tabele","Set","akcje","unikalne_akcje","ktosie","unikalne_ktosie","cosie","unikalne_cosie","t","selected","UsersScreen","showUserAddModal","setUserAddModal","showUserEditModal","setUserEditModal","showInventoryShowModal","setShowInventoryShowModal","callMsGraph","_callMsGraph","accessToken","headers","bearer","Headers","append","fetch","json","UserProfileScreen","_useMsal","setGraphData","request","acquireTokenSilent","acquireTokenPopup","RequestProfileData","App","UnauthenticatedTemplate","AuthenticatedTemplate","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","msalInstance","PublicClientApplication","auth","clientId","authority","redirectUri","knownAuthorities","ReactDOM","createRoot","document","getElementById","StrictMode","MsalProvider","Provider"],"mappings":"4VACAA,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAEA,IAAM6I,EAAeC,YAAiB,iBAAgBC,YAAAhJ,IAAA+G,KAAC,SAAAkC,IAAA,IAAAC,EAAA,OAAAlJ,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EAC5B8D,IAAMC,IAAI,+DAA8D,OAAjF,OAARH,EAAQC,EAAAxE,KAAAwE,EAAArE,OAAA,SAEPoE,EAASI,KAAKC,WAAS,wBAAAJ,EAAApB,SAAAkB,oBCLlCjJ,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAMuJ,EAAYT,YAAiB,cAAa,eAAAU,EAAAT,YAAAhJ,IAAA+G,KAAC,SAAAkC,EAAOS,GAAQ,IAAAR,EAAA,OAAAlJ,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACrC8D,IAAMO,KAAK,gEAAgED,GAAS,OACjF,OADpBR,EAAQC,EAAAxE,KACdiF,QAAQC,IAAIX,EAASI,MAAKH,EAAArE,OAAA,SACnBoE,EAASI,KAAKI,UAAQ,wBAAAP,EAAApB,SAAAkB,MAChC,gBAAAa,GAAA,OAAAL,EAAAM,MAAAjH,KAAAkH,YAJ+C,iBCDhDhK,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAMgK,EAAelB,YAAiB,iBAAgB,eAAAU,EAAAT,YAAAhJ,IAAA+G,KAAC,SAAAkC,EAAOiB,GAAI,OAAAlK,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACxD8D,IAAMO,KAAK,mEAAmEO,GAAK,cAAAf,EAAArE,OAAA,SAClFoF,GAAI,wBAAAf,EAAApB,SAAAkB,MACd,gBAAAa,GAAA,OAAAL,EAAAM,MAAAjH,KAAAkH,YAHqD,iBCDtDhK,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAMkK,EAAepB,YAAiB,iBAAgB,eAAAU,EAAAT,YAAAhJ,IAAA+G,KAAC,SAAAkC,EAAOS,GAAQ,IAAAR,EAAA,OAAAlJ,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EAC3C8D,IAAMO,KAAK,oEAAoED,GAAS,OACrF,OADpBR,EAAQC,EAAAxE,KACdiF,QAAQC,IAAIX,EAASI,MAAKH,EAAArE,OAAA,SAEnBoE,EAASI,KAAKI,UAAQ,wBAAAP,EAAApB,SAAAkB,MAChC,gBAAAa,GAAA,OAAAL,EAAAM,MAAAjH,KAAAkH,YALqD,ICIhDI,EAA0BC,aAAaC,QAAQ,sBAC7CD,aAAaC,QAAQ,sBACrB,GAEFC,EAAeC,YAAY,CAC7B1D,KAAK,YACL2D,aAAa,CACTC,WAAU,EACVtG,MAAM,KACNuG,cAAc,GACdC,mBAAmBR,EACnBS,qBAAqB,GACrBC,OAAO,GACPC,iBAAiB,KACjBC,UAAU,KACVC,UAAU,MACVC,WAAU,EACVC,SAAS,IAGbC,SAAS,CACPC,WAAU,SAAChH,EAAMiH,GACfjH,EAAM6G,WAAU,GAElBK,sBAAqB,SAAClH,EAAMiH,GAC1BjH,EAAMuG,mBAAmBvG,EAAMsG,cAAcpE,QAE/CiF,wBAAuB,SAACnH,EAAMiH,GAC5BjH,EAAMwG,qBAAqBxG,EAAMsG,cAAcc,KAAK,SAAA/B,GAAQ,OAAIA,EAASgC,UAAYJ,EAAOK,WAE9FC,oBAAmB,SAACvH,EAAMiH,GACxBjH,EAAM0G,iBAAiB1G,EAAMsG,cAAcc,KAAK,SAAA/B,GAAQ,OAAIA,EAASmC,cAAgBP,EAAOK,WAE9FG,eAAc,SAACzH,EAAMiH,GACnBjH,EAAMyG,OAAOQ,EAAOK,SAEtBI,cAAa,SAAC1H,EAAMiH,GAGlB,GAFAjH,EAAM2G,UAAUM,EAAOK,QAAQX,UAC/B3G,EAAM4G,UAAUK,EAAOK,QAAQV,UAC5BK,EAAOK,QAAQX,UAAU,CACxB,IAAMgB,EAAOC,YAAI5H,EAAMsG,eAAeuB,KAAK,SAACC,EAAEC,GAC1C,OAAiC,OAA9BD,EAAEb,EAAOK,QAAQX,WAA0B,EACb,OAA9BoB,EAAEd,EAAOK,QAAQX,YAA2B,EACd,OAA9BoB,EAAEd,EAAOK,QAAQX,YAAmD,OAA9BmB,EAAEb,EAAOK,QAAQX,WAA0B,EAE7EmB,EAAEb,EAAOK,QAAQX,WAAWqB,WAAWC,cAAcF,EAAEd,EAAOK,QAAQX,WAAWqB,WAAW,CAACE,SAAQ,KAAmC,QAA3BjB,EAAOK,QAAQV,UAAkB,GAAG,KAE5J5G,EAAMsG,cAAcqB,KAI5BQ,cAAa,SAACC,GACVA,EACGC,QAAQ5D,EAAe6D,QAAS,SAACtI,EAAOiH,GACvCjH,EAAMqG,WAAY,IAEnBgC,QAAQ5D,EAAe8D,UAAW,SAACvI,EAAOiH,GACzC,GAAGA,EAAOK,UAAU,GAClB,OAAOtH,EAES,KAAfA,EAAMyG,OACPzG,EAAMsG,cAAcW,EAAOK,SAE3BtH,EAAMsG,cAAcW,EAAOK,QAC3BtH,EAAMsG,cAActG,EAAMsG,cAAckC,OACtC,SAACC,GAAK,OAAOA,EAAEC,aAAaC,cAAcC,SAAS5I,EAAMyG,OAAOkC,gBAAiBF,EAAEI,GAAGF,cAAcC,SAAS5I,EAAMyG,OAAOkC,kBAI9H3I,EAAMqG,WAAY,EAClBrG,EAAMuG,mBAAmBU,EAAOK,QAAQpF,OACxC8D,aAAa8C,QAAQ,qBAAqBC,KAAKC,UAAUhJ,EAAMuG,uBAGhE8B,QAAQ5D,EAAewE,SAAU,SAACjJ,EAAOiH,GACxCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,UAE5Bb,QAAQlD,EAAYmD,QAAS,SAACtI,EAAOiH,GACpCjH,EAAMqG,WAAY,IAEnBgC,QAAQlD,EAAYoD,UAAW,SAACvI,EAAOiH,GACtC,GAA2B,IAAxBA,EAAOK,QAAQpF,OAGhB,OAFAlC,EAAM6G,WAAU,EAChB7G,EAAM8G,SAAQ,mGACP9G,EAETA,EAAM6G,WAAU,EAChB7G,EAAM8G,SAAQ,8BAAAqC,OAAqBlC,EAAOK,QAAQoB,cAClD1I,EAAMqG,WAAY,EAClBd,QAAQC,IAAIyB,EAAOK,SACnBtH,EAAMsG,cAAc3E,KAAKsF,EAAOK,SAChCtH,EAAMuG,mBAAmBvG,EAAMsG,cAAcpE,OAC7C8D,aAAa8C,QAAQ,qBAAqBC,KAAKC,UAAUhJ,EAAMuG,uBAGhE8B,QAAQlD,EAAY8D,SAAU,SAACjJ,EAAOiH,GACrCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,UAE5Bb,QAAQzC,EAAe0C,QAAS,SAACtI,EAAOiH,GACvCjH,EAAMqG,WAAY,IAEnBgC,QAAQzC,EAAe2C,UAAW,SAACvI,EAAOiH,GACzCjH,EAAMqG,WAAY,EAElBrG,EAAM6G,WAAU,EAChB7G,EAAM8G,SAAQ,+BAAAqC,OAAsBlC,EAAOK,QAAQoB,cACnD1I,EAAMsG,cAActG,EAAMsG,cAAckC,OAAO,SAACnD,GAC9C,OAAOA,EAASmC,cAAcP,EAAOK,QAAQE,cAG/CxH,EAAMuG,mBAAmBvG,EAAMsG,cAAcpE,OAC7C8D,aAAa8C,QAAQ,qBAAqBC,KAAKC,UAAUhJ,EAAMuG,uBAGhE8B,QAAQzC,EAAeqD,SAAU,SAACjJ,EAAOiH,GACxCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,UAE5Bb,QAAQvC,EAAewC,QAAS,SAACtI,EAAOiH,GACvCjH,EAAMqG,WAAY,IAEnBgC,QAAQvC,EAAeyC,UAAW,SAACvI,EAAOiH,GACzCjH,EAAMqG,WAAY,EAClBd,QAAQC,IAAIyB,EAAOK,SACnB,IAAM8B,EAAQpJ,EAAMsG,cAAc+C,UAAU,SAAAhE,GAAQ,OAAIA,EAASmC,cAAgBP,EAAOK,QAAQE,eACjF,IAAX4B,IACFpJ,EAAM6G,WAAU,EAChB7G,EAAM8G,SAAQ,iCAAAqC,OAA6BlC,EAAOK,QAAQoB,cAC1D1I,EAAMsG,cAAc8C,GAAME,YAAA,GACrBtJ,EAAMsG,cAAc8C,GACpBnC,EAAOK,YAOfe,QAAQvC,EAAemD,SAAU,SAACjJ,EAAOiH,GACxCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,aAK8BK,EACsDrD,EAAesD,QAAtGrC,GAADoC,EAArBrC,sBAA6CqC,EAAvBpC,yBAAwBM,EAAc8B,EAAd9B,eAAmCC,GAAD6B,EAAnBhC,oBAAiCgC,EAAb7B,eAAcV,EAAUuC,EAAVvC,WAChGyC,EAAkBvD,EAAewD,qBCzJ9C/N,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAM+N,EAAajF,YAAiB,eAAcC,YAAAhJ,IAAA+G,KAAC,SAAAkC,IAAA,IAAAC,EAAA,OAAAlJ,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACxB8D,IAAMC,IAAI,6DAA4D,OAA/E,OAARH,EAAQC,EAAAxE,KAAAwE,EAAArE,OAAA,SACPoE,EAASI,KAAK2E,SAAO,wBAAA9E,EAAApB,SAAAkB,OCF1BiF,EAAa1D,YAAY,CAC3B1D,KAAK,UACL2D,aAAa,CACTC,WAAU,EACVtG,MAAM,KACN+J,YAAY,GACZC,gBAAgB,GAEpBhD,SAAS,CACLiD,mBAAkB,SAAChK,EAAMiH,GACvBjH,EAAM+J,gBAAgB/J,EAAM8J,YAAY,GAAGG,KAGjD9B,cAAa,SAACC,GACVA,EACGC,QAAQsB,EAAarB,QAAS,SAACtI,EAAOiH,GACrCjH,EAAMqG,WAAY,IAEnBgC,QAAQsB,EAAapB,UAAW,SAACvI,EAAOiH,GACvCjH,EAAMqG,WAAY,EAClBrG,EAAM8J,YAAY7C,EAAOK,QACzBtH,EAAM+J,gBAAgB9C,EAAOK,QAAQ,GAAG2C,KAGzC5B,QAAQsB,EAAaV,SAAU,SAACjJ,EAAOiH,GACtCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,aAI1BgB,EAAeL,EAAaH,QAAQS,EACFN,EAAaL,WAApCW,EAAVC,WAA6BD,EAAlBH,uCChCzBrO,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAEA,IAAMyO,EAAU3F,YAAiB,aAAYC,YAAAhJ,IAAA+G,KAAC,SAAAkC,IAAA,IAAAC,EAAA,OAAAlJ,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACnB8D,IAAMC,IAAI,0DAAyD,OAA5E,OAARH,EAAQC,EAAAxE,KAAAwE,EAAArE,OAAA,SACPoE,EAASI,KAAKqF,MAAI,wBAAAxF,EAAApB,SAAAkB,OCHvB2F,EAAe,CAACC,OAAO,GAAGC,MAAM,GAAGC,MAAM,GAAGC,IAAI,IAChDC,EAAUzE,YAAY,CACxB1D,KAAK,OACL2D,aAAa,CACTC,WAAU,EACVtG,MAAM,KACN8K,SAAS,GACTC,aAAa,GACbC,QAAQR,EACR5D,UAAU,GACVC,UAAU,MACVoE,UAAU,IAEdjE,SAAS,CACTkE,UAAS,SAACjL,EAAMiH,GACZjH,EAAM+K,QAAQ9D,EAAOK,SAEzB4D,aAAY,SAAClL,EAAMiH,GACjBjH,EAAM+K,QAAQR,GAEhBY,iBAAgB,SAACnL,EAAMiH,GACrBjH,EAAMgL,UAAU/D,EAAOK,SAEzB8D,SAAQ,SAACpL,EAAMiH,GAGb,GAFAjH,EAAM2G,UAAUM,EAAOK,QAAQX,UAC/B3G,EAAM4G,UAAUK,EAAOK,QAAQV,UAC5BK,EAAOK,QAAQX,UAAU,CACxB,IAAMgB,EAAOC,YAAI5H,EAAM8K,cAAcjD,KAAK,SAACC,EAAEC,GACzC,OAAiC,OAA9BD,EAAEb,EAAOK,QAAQX,WAA0B,EACb,OAA9BoB,EAAEd,EAAOK,QAAQX,YAA2B,EACd,OAA9BoB,EAAEd,EAAOK,QAAQX,YAAmD,OAA9BmB,EAAEb,EAAOK,QAAQX,WAA0B,EAE7EmB,EAAEb,EAAOK,QAAQX,WAAWqB,WAAWC,cAAcF,EAAEd,EAAOK,QAAQX,WAAWqB,WAAW,CAACE,SAAQ,KAAmC,QAA3BjB,EAAOK,QAAQV,UAAkB,GAAG,KAE5J5G,EAAM8K,aAAanD,KAMzBQ,cAAa,SAACC,GACVA,EACGC,QAAQgC,EAAU/B,QAAS,SAACtI,EAAOiH,GAClCjH,EAAMqG,WAAY,IAEnBgC,QAAQgC,EAAU9B,UAAW,SAACvI,EAAOiH,GACpCjH,EAAMqG,WAAY,EAClBrG,EAAM6K,SAAS5D,EAAOK,QAAQ,IAAA+D,EACCrL,EAAM+K,QAA9BP,EAAMa,EAANb,OAAOE,EAAKW,EAALX,MAAMD,EAAKY,EAALZ,MAAME,EAAGU,EAAHV,IAC1BpF,QAAQC,IAAI8F,YAAQtL,EAAM+K,UAC1B/K,EAAM8K,aAAa7D,EAAOK,QACd,KAATkD,IACDxK,EAAM8K,aAAa9K,EAAM8K,aAAatC,OACpC,SAAAvD,GAAI,OAAEA,EAAKuF,OAAO5B,SAAS4B,MAGpB,KAARE,IACD1K,EAAM8K,aAAa9K,EAAM8K,aAAatC,OAClC,SAAAvD,GAAI,OAAEA,EAAKyF,MAAM9B,SAAS8B,MAGrB,KAARD,IACDzK,EAAM8K,aAAa9K,EAAM8K,aAAatC,OACpC,SAAAvD,GAAI,OAAEA,EAAKsG,GAAG3C,SAAS6B,MAElB,KAANE,IACD3K,EAAM8K,aAAa9K,EAAM8K,aAAatC,OACpC,SAAAvD,GAAI,OAAEA,EAAK0F,IAAI/B,SAAS+B,QAK7BtC,QAAQgC,EAAUpB,SAAU,SAACjJ,EAAOiH,GACnCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,aAI1BsC,EAAYZ,EAAUlB,QAAQ+B,EAC+Bb,EAAUpB,QAA9DyB,GAADQ,EAAPC,QAAiBD,EAATR,WAAUC,EAAYO,EAAZP,aAAaE,EAAQK,EAARL,SAAyBK,EAAhBN,8BChFtDxP,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAM+P,EAAWjH,YAAiB,aAAYC,YAAAhJ,IAAA+G,KAAC,SAAAkC,IAAA,IAAAC,EAAA,OAAAlJ,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACpB8D,IAAMC,IAAI,4DAA2D,OAA9E,OAARH,EAAQC,EAAAxE,KAAAwE,EAAArE,OAAA,SACPoE,EAASI,KAAK2G,OAAK,wBAAA9G,EAAApB,SAAAkB,oBCH9BjJ,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAMiQ,EAAQnH,YAAiB,UAAS,eAAAU,EAAAT,YAAAhJ,IAAA+G,KAAC,SAAAkC,EAAOkH,GAAI,IAAAjH,EAAA,OAAAlJ,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACzB8D,IAAMO,KAAK,4DAA4DwG,GAAK,OACpE,OADzBjH,EAAQC,EAAAxE,KACdiF,QAAQC,IAAIX,EAASI,KAAK6G,MAAKhH,EAAArE,OAAA,SACxBoE,EAASI,KAAK6G,MAAI,wBAAAhH,EAAApB,SAAAkB,MAC5B,gBAAAa,GAAA,OAAAL,EAAAM,MAAAjH,KAAAkH,YAJuC,iBCDxChK,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAMmQ,GAAWrH,YAAiB,aAAY,eAAAU,EAAAT,YAAAhJ,IAAA+G,KAAC,SAAAkC,EAAOqF,GAAE,OAAAtO,IAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EAC9C8D,IAAMO,KAAK,+DAA+D,CAAC2E,OAAI,cAAAnF,EAAArE,OAAA,SAC9EwJ,GAAE,wBAAAnF,EAAApB,SAAAkB,MACZ,gBAAAa,GAAA,OAAAL,EAAAM,MAAAjH,KAAAkH,YAH6C,kBCD9ChK,GAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EACA,IAAMoQ,GAAWtH,YAAiB,aAAY,eAAAU,EAAAT,YAAAhJ,KAAA+G,KAAC,SAAAkC,EAAOkH,GAAI,IAAAjH,EAAA,OAAAlJ,KAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EAC/B8D,IAAMO,KAAK,gEAAgEwG,GAAK,OAAzF,OAARjH,EAAQC,EAAAxE,KAAAwE,EAAArE,OAAA,SACPoE,EAASI,KAAK6G,MAAI,wBAAAhH,EAAApB,SAAAkB,MAC5B,gBAAAa,GAAA,OAAAL,EAAAM,MAAAjH,KAAAkH,YAH6C,ICIxCsG,GAAsBjG,aAAaC,QAAQ,kBACzCD,aAAaC,QAAQ,kBACrB,GACFiG,GAAW/F,YAAY,CACzB1D,KAAK,QACL2D,aAAa,CACTC,WAAU,EACVtG,MAAM,KACNoM,UAAU,GACVC,cAAc,EACdC,eAAeJ,GACfK,SAAS,GACT7F,OAAO,GACPE,UAAU,GACVC,UAAU,MACV2F,YAAY,IAEhBxF,SAAS,CACLyF,gBAAe,SAACxM,EAAMiH,GAClBjH,EAAMsM,SAAStM,EAAMmM,UAAU/E,KAAK,SAAA0E,GAAI,OAAIA,EAAK7B,KAAOhD,EAAOK,WAEnEmF,eAAc,SAACzM,EAAMiH,GACnBjH,EAAMuM,YAAYtF,EAAOK,SAE3BoF,WAAU,SAAC1M,EAAMiH,GACbjH,EAAMyG,OAAOQ,EAAOK,SAExBqF,UAAS,SAAC3M,EAAMiH,GAGd,GAFAjH,EAAM2G,UAAUM,EAAOK,QAAQX,UAC/B3G,EAAM4G,UAAUK,EAAOK,QAAQV,UAC5BK,EAAOK,QAAQX,UAAU,CACxB,IAAMgB,EAAOC,YAAI5H,EAAMmM,WAAWtE,KAAK,SAACC,EAAEC,GACtC,OAAiC,OAA9BD,EAAEb,EAAOK,QAAQX,WAA0B,EACb,OAA9BoB,EAAEd,EAAOK,QAAQX,YAA2B,EACd,OAA9BoB,EAAEd,EAAOK,QAAQX,YAAmD,OAA9BmB,EAAEb,EAAOK,QAAQX,WAA0B,EAE7EmB,EAAEb,EAAOK,QAAQX,WAAWqB,WAAWC,cAAcF,EAAEd,EAAOK,QAAQX,WAAWqB,WAAW,CAACE,SAAQ,KAAmC,QAA3BjB,EAAOK,QAAQV,UAAkB,GAAG,KAE5J5G,EAAMmM,UAAUxE,KAI1BQ,cAAa,SAACC,GACVA,EAAQC,QAAQsD,EAAWpD,UAAU,SAACvI,EAAMiH,GAClB,KAAfjH,EAAMyG,OACTzG,EAAMmM,UAAUlF,EAAOK,SAKvBtH,EAAMmM,UAAUlF,EAAOK,QACvBtH,EAAMmM,UAAUnM,EAAMmM,UAAU3D,OAC9B,SAAAoE,GAAC,OAAEA,EAAEnK,KAAKkG,cAAcC,SAAS5I,EAAMyG,OAAOkC,gBAC9CiE,EAAEC,QAAQlE,cAAcC,SAAS5I,EAAMyG,OAAOkC,kBAGhD3I,EAAMoM,cAAcnF,EAAOK,QAAQ,GAAG2C,GACtCjK,EAAMqM,eAAepF,EAAOK,QAAQpF,OACpClC,EAAMqG,WAAU,EAChBL,aAAa8C,QAAQ,iBAAiBC,KAAKC,UAAUhJ,EAAMqM,mBAIlEhE,QAAQwD,EAAQvD,QAAS,SAACtI,EAAOiH,GAC9BjH,EAAMqG,WAAY,IAEnBgC,QAAQwD,EAAQtD,UAAW,SAACvI,EAAOiH,GAClCjH,EAAMqG,WAAY,EAClBrG,EAAMmM,UAAUxK,KAAKsF,EAAOK,SAC5BtH,EAAMqM,eAAerM,EAAMmM,UAAUjK,OACrC8D,aAAa8C,QAAQ,iBAAiBC,KAAKC,UAAUhJ,EAAMqM,mBAG5DhE,QAAQwD,EAAQ5C,SAAU,SAACjJ,EAAOiH,GACjCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,UAE5Bb,QAAQ0D,GAAWzD,QAAS,SAACtI,EAAOiH,GACnCjH,EAAMqG,WAAY,IAEnBgC,QAAQ0D,GAAWxD,UAAW,SAACvI,EAAOiH,GACrCjH,EAAMqG,WAAY,EAClBrG,EAAMmM,UAAUnM,EAAMmM,UAAU3D,OAAO,SAACsD,GACtC,OAAOA,EAAK7B,KAAKhD,EAAOK,UAE1BtH,EAAMqM,eAAerM,EAAMmM,UAAUjK,OACrC8D,aAAa8C,QAAQ,iBAAiBC,KAAKC,UAAUhJ,EAAMqM,mBAG5DhE,QAAQ0D,GAAW9C,SAAU,SAACjJ,EAAOiH,GACpCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,UAE5Bb,QAAQ2D,GAAW1D,QAAS,SAACtI,EAAOiH,GACnCjH,EAAMqG,WAAY,IAEnBgC,QAAQ2D,GAAWzD,UAAW,SAACvI,EAAOiH,GACrCjH,EAAMqG,WAAY,EAClB,IAAM+C,EAAQpJ,EAAMmM,UAAU9C,UAAU,SAAAyC,GAAI,OAAIA,EAAK7B,KAAOhD,EAAOK,QAAQ2C,MAC5D,IAAXb,IACFpJ,EAAMmM,UAAU/C,GAAME,YAAA,GACjBtJ,EAAMmM,UAAU/C,GAChBnC,EAAOK,YASfe,QAAQ2D,GAAW/C,SAAU,SAACjJ,EAAOiH,GACpCjH,EAAMqG,WAAU,EAChBrG,EAAMD,MAAQkH,EAAOlH,MAAMmJ,aAK1B4D,GAAeZ,GAAWxC,QAAQqD,GAC6Bb,GAAW1C,QAAhEgD,IAADO,GAARC,SAAwBD,GAAfP,iBAAgBE,GAAUK,GAAVL,WAAWC,GAASI,GAATJ,UC5H5CM,ID4HoEF,GAAdN,eC5HnCtG,YAAY,CACjC1D,KAAM,cACN2D,aAAc,CACVmG,YAAa,IAEjBxF,SAAU,CACNmG,oBAAmB,SAAClN,EAAOiH,GACvBjH,EAAMuM,YAActF,EAAOK,aAIzB4F,GAAuBD,GAAiBzD,QAAxC0D,oBACDC,GAAoBF,GAAiBvD,QCInC0D,GAVDC,YAAe,CAC3B3D,QAAS,CACPxE,UAAWuE,EACXG,QAASM,EACT0B,MAAOkB,GACPxC,KAAMkB,EACN8B,YAAaH,oFCbJI,GAAmB,CAC5B,CAAEjR,MAAO,MAAOkR,MAAO,OACvB,CAAElR,MAAO,MAAOkR,MAAO,OACvB,CAAElR,MAAO,OAAQkR,MAAO,QACxB,CAAElR,MAAO,YAAakR,MAAO,aAC7B,CAAElR,MAAO,aAAckR,MAAO,mBAC9B,CAAElR,MAAO,YAAakR,MAAO,QAC7B,CAAElR,MAAO,QAASkR,MAAO,iBAEhBC,GAAwB,CACjC,CAAEnR,MAAO,SAAUkR,MAAO,UAC1B,CAAElR,MAAO,KAAMkR,MAAO,MACtB,CAAElR,MAAO,WAAYkR,MAAO,YAC5B,CAAElR,MAAO,SAAUkR,MAAO,UAC1B,CAAElR,MAAO,WAAYkR,MAAO,cAC5B,CAAElR,MAAO,YAAakR,MAAO,cCgJlBE,OAxJf,SAAwBtI,GAAmC,IAAhCuI,EAAIvI,EAAJuI,KAAMC,EAAKxI,EAALwI,MAAOC,EAAezI,EAAfyI,gBAAeC,EACZC,YAAY,SAAC/N,GAAY,OAAOA,EAAM4J,UAAvEE,EAAWgE,EAAXhE,YAAaC,EAAe+D,EAAf/D,gBAAeiE,EACCD,YAAY,SAAC/N,GAAY,OAAOA,EAAM4L,QAAnEO,EAAS6B,EAAT7B,UAAWC,EAAa4B,EAAb5B,cAEb6B,EAAWC,cACTC,EAAaC,eAAbD,SAAQE,EACAC,mBAASH,EAAS,GAAGI,UAA9BC,EAAuCC,YAAAJ,EAAA,GAAlC,GAAAK,EACgBJ,mBAAS,CAAE5F,aAAgB,GAAIG,GAAM,GAAI8F,IAAO,GAAIC,MAAS,KAAKC,EAAAJ,YAAAC,EAAA,GAAvFI,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACgBV,mBAAS,IAAGW,EAAAR,YAAAO,EAAA,GAA7CtG,EAAYuG,EAAA,GAAEC,EAAeD,EAAA,GAAAE,EAChBb,mBAAS,IAAGc,EAAAX,YAAAU,EAAA,GAAzBtG,EAAEuG,EAAA,GAAEC,EAAKD,EAAA,GAAAE,EACMhB,mBAAS,IAAGiB,EAAAd,YAAAa,EAAA,GAA3BX,EAAGY,EAAA,GAAEC,EAAMD,EAAA,GAAAE,EACQnB,mBAAS,IAAGoB,EAAAjB,YAAAgB,EAAA,GAA/Bb,EAAKc,EAAA,GAAEC,EAAQD,EAAA,GAAAE,EACAtB,mBAAS,IAAGuB,EAAApB,YAAAmB,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAAAG,EACY1B,mBAAS,IAAG2B,EAAAxB,YAAAuB,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAAAG,EACQ9B,mBAAS+B,SAAStG,IAAiBuG,EAAA7B,YAAA2B,EAAA,GAA9DG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,GACAnC,mBAAS+B,SAASjE,IAAesE,GAAAjC,YAAAgC,GAAA,GAAxDpJ,GAAOqJ,GAAA,GAAEC,GAAUD,GAAA,GAAAE,GAGYtC,mBAAS,CAACf,GAAiB,GAAIA,GAAiB,KAAIsD,GAAApC,YAAAmC,GAAA,GAAnFE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,oBAAU,WACR/C,EAAStE,KACTsE,EAAStC,MACR,CAACsC,EAAUlE,EAAiBqC,IAG/B,IAAM6E,GAAkB,SAACC,EAAKC,EAAKC,EAAMC,GACvC,GAAIA,EAAanP,OAASiP,EAAK,CAC7B,IAAMjI,EAAO,mDAAAC,OAAyCgI,GAEtD,OADApC,EAAU,SAAClQ,GAAM,OAAAyK,YAAA,GAAWzK,EAAMyS,YAAA,GAAGF,EAAQlI,OACtC,EACF,GAAImI,EAAanP,OAASgP,EAAK,CACpC,IAAMhI,EAAO,6DAAAC,OAA8C+H,GAE3D,OADAnC,EAAU,SAAClQ,GAAM,OAAAyK,YAAA,GAAWzK,EAAMyS,YAAA,GAAGF,EAAQlI,OACtC,EAIP,OADA6F,EAAU,KACH,GAGLwC,GAAe,SAACC,GACpB,GAAKP,GAAgB,EAAG,GAAG,eAAevI,IAAkBuI,GAAgB,EAAG,GAAI,KAAKpI,GAOtFtD,QAAQC,IAAIsJ,OAPd,CAEE,IAAMzJ,EAAW,CAAEqD,eAAcG,KAAI8F,MAAKC,QAAOkB,IAAKO,SAASP,GAAMI,QAASG,SAASH,GAAUK,YAAWlJ,WAASmH,QAAMsC,gBAC3HvL,QAAQC,IAAIH,GACZwI,EAAgBxI,GAChBuI,MAQA6D,GAAa3H,EAAY4H,IAAI,SAACC,GAAQ,MAAO,CAAErV,MAAOqV,EAAE1H,GAAIuD,MAAOmE,EAAElP,QACrEmP,GAAWzF,EAAUuF,IAAI,SAACC,GAAQ,MAAO,CAAErV,MAAOqV,EAAE1H,GAAIuD,MAAOmE,EAAElP,KAAO,IAAMkP,EAAE9E,WAEpF,OACEgF,IAAAC,cAAAD,IAAAE,SAAA,KAEEF,IAAAC,cAACE,KAAK,CAACrE,KAAMA,EAAMsE,KAAK,MACtBJ,IAAAC,cAACE,KAAME,OAAM,CAACC,aAAW,EAACC,QAASxE,GACjCiE,IAAAC,cAACE,KAAMK,MAAK,KAAC,sBAEfR,IAAAC,cAACE,KAAMM,KAAI,KAGTT,IAAAC,cAACS,KAAI,CAACC,SAAUjB,IAChBM,IAAAC,cAACW,KAAG,KACJZ,IAAAC,cAACY,KAAG,KACFb,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,OAAO4U,YAAY,QACpCtQ,KAAK,eACLuQ,SAAU,SAACxB,GAAC,OAAKtC,EAAgBsC,EAAEyB,OAAO3W,QAC1CA,MAAOoM,EACPwK,WAAS,KAGZpE,EAAOpG,cAAgBmJ,IAAAC,cAACqB,KAAK,KAAErE,EAAOpG,cACvCmJ,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,OAAO4U,YAAY,KACpCtQ,KAAK,KACLuQ,SAAU,SAACxB,GAAC,OAAKnC,EAAMmC,EAAEyB,OAAO3W,QAChCA,MAAOuM,KAGViG,EAAOjG,IAAMgJ,IAAAC,cAACqB,KAAK,KAAErE,EAAOjG,IAE7BgJ,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,OACrChB,IAAAC,cAACsB,KAAM,CAACC,QAAS5F,GAAuBsF,YAAY,MAAMO,aAAc3E,EAAK4E,cAAc,EAAMP,SAAU,SAACxB,GAAQhC,EAAOgC,EAAElV,WAE9HwS,EAAO0E,UAAY3B,IAAAC,cAACqB,KAAK,KAAErE,EAAO0E,UACnC3B,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,OAAO4U,YAAY,QACpCtQ,KAAK,QACLuQ,SAAU,SAACxB,GAAC,OAAK7B,EAAS6B,EAAEyB,OAAO3W,QACnCA,MAAOsS,KAGVE,EAAO2E,YAAc5B,IAAAC,cAACqB,KAAK,KAAErE,EAAO2E,YACrC5B,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,SAAS4U,YAAY,MACtCtQ,KAAK,MACLuQ,SAAU,SAACxB,GAAC,OAAKzB,EAAOyB,EAAEyB,OAAO3W,QACjCA,MAAOwT,EACP4D,UAAW,EACXC,UAAW,MAKb9B,IAAAC,cAACY,KAAG,KACL5D,EAAO8E,UAAY/B,IAAAC,cAACqB,KAAK,KAAErE,EAAO8E,UACnC/B,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,SAAS4U,YAAY,oBACtCtQ,KAAK,UACLuQ,SAAU,SAACxB,GAAC,OAAKrB,EAAWqB,EAAEyB,OAAO3W,QACrCA,MAAO4T,EACPwD,UAAW,EACXC,UAAW,KAGd7E,EAAO+E,cAAgBhC,IAAAC,cAACqB,KAAK,KAAErE,EAAO+E,cACvChC,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,UACrChB,IAAAC,cAACsB,KAAM,CAACC,QAAS5B,GAAYsB,YAAY,SAASO,aAAc/C,EAAWgD,cAAc,EAAMP,SAAU,SAACxB,GAAQhB,EAAagB,EAAElV,WAEnIuV,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,cACrChB,IAAAC,cAACsB,KAAM,CAACC,QAASzB,GAAUmB,YAAY,kBAAaO,aAAcjM,GAASkM,cAAc,EAAMP,SAAU,SAAAxB,GAAC,OAAIb,GAAWa,EAAElV,WAE7HuV,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,aACrChB,IAAAC,cAACsB,KAAM,CAACU,SAAO,EAACT,QAAS9F,GAAkBwF,YAAY,YAAYO,aAAc,CAAC/F,GAAiB,GAAIA,GAAiB,IAAKgG,cAAc,EAAMP,SAAU,SAACxB,GAAOT,GAAe,SAAAgD,GAAC,OAAIvC,IAAIjM,QAAQC,IAAIgM,WAQ7MK,IAAAC,cAACE,KAAMgC,OAAM,KACXnC,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQ9B,QAASxE,GAAO,WAGxCiE,IAAAC,cAACmC,KAAM,CAAC9V,KAAK,SAAS+V,QAAQ,QAAQ9B,QAASb,IAAc,aCnIxD4C,OAhBf,SAAkBC,GAAM,IAAA/F,EACWC,oBAAS,GAAM+F,EAAA5F,YAAAJ,EAAA,GAAvChI,EAASgO,EAAA,GAACC,EAAYD,EAAA,GAAA3F,EACFJ,mBAAS,MAAKO,EAAAJ,YAAAC,EAAA,GAAlC6F,EAAO1F,EAAA,GAAC2F,EAAU3F,EAAA,GACnBZ,EAASC,cAWf,MAAO,CAVSuG,sBACZ,SAACvW,GACDoW,GAAa,GACbrG,EAASmG,EAAMlW,IACdwW,SACApQ,MAAM,SAACvE,GAAK,OAAGyU,EAAWzU,KAC1B4U,QAAQ,kBAAIC,WAAW,WAAKN,GAAa,IAAQ,QAEtD,CAACrG,EAASmG,IAEO/N,EAAUkO,cCDhBM,OAbf,SAAuBzP,GAAU,IAAR0P,EAAK1P,EAAL0P,MAEnBC,EAAKD,EAAM,EAAEA,EAAMA,EAAM,EACzBE,EAAOC,MAAMF,GAAMG,KAAKH,GAAMrD,IAAI,SAAC9E,EAAEzK,GAAK,OAAO0P,IAAAC,cAACqD,KAAW,CAAC/Y,IAAK+F,EAAGiT,GAAG,IAAIC,UAAU,QAC7FxD,IAAAC,cAACqD,KAAW,CAACG,GAAI,QAEf,OACEzD,IAAAC,cAAAD,IAAAE,SAAA,KACCiD,IC4JUO,OA7Jf,SAAyBnQ,GAA8C,IAA3CuI,EAAIvI,EAAJuI,KAAMC,EAAKxI,EAALwI,MAAOvI,EAAQD,EAARC,SAAUmQ,EAAgBpQ,EAAhBoQ,iBACzCrH,EAAaC,eAAbD,SAAQE,EACEC,mBAASH,EAAS,GAAGI,UAAhCkH,EAAyChH,YAAAJ,EAAA,GAAlC,GAAAqH,EAC6CvB,GAASxK,GAAagM,EAAAlH,YAAAiH,EAAA,GAA1EE,EAAcD,EAAA,GAAEE,EAAgBF,EAAA,GAAEG,EAAcH,EAAA,GAAAI,EACF5B,GAASxI,GAAWqK,EAAAvH,YAAAsH,EAAA,GAAlEE,EAAYD,EAAA,GAAEE,EAAcF,EAAA,GAAEG,EAAYH,EAAA,GACzClM,EAAgBiE,YAAY,SAAC/N,GAAY,OAAOA,EAAM4J,UAAtDE,YACAqC,EAAc4B,YAAY,SAAC/N,GAAY,OAAOA,EAAM4L,QAApDO,UACFzF,EAAmBqH,YAAY,SAAA/N,GAAK,OAAIA,EAAMkF,UAAUoB,cAAcc,KAAK,SAAAqB,GAAC,OAAIA,EAAEjB,cAAgBnC,EAASmC,gBAAakH,EAC5EJ,mBAAS,IAAGO,EAAAJ,YAAAC,EAAA,GAAvD0H,EAAiBvH,EAAA,GAAEwH,EAAoBxH,EAAA,GAAAG,EACNV,mBAAS5H,EAAiBgC,cAAauG,EAAAR,YAAAO,EAAA,GAAxEtG,EAAYuG,EAAA,GAAEC,EAAeD,EAAA,GAAAE,EACdb,mBAAS5H,EAAiBiI,KAAIS,EAAAX,YAAAU,EAAA,GAA7CR,EAAGS,EAAA,GAAEI,EAAMJ,EAAA,GAAAE,EACQhB,mBAAS5H,EAAiBkI,OAAMW,EAAAd,YAAAa,EAAA,GAAnDV,EAAKW,EAAA,GAAEI,EAAQJ,EAAA,GAAAE,EACAnB,mBAAS5H,EAAiBoJ,KAAIJ,EAAAjB,YAAAgB,EAAA,GAA7CK,EAAGJ,EAAA,GAAEK,EAAML,EAAA,GAAAE,EACYtB,mBAAS5H,EAAiBwJ,SAAQL,EAAApB,YAAAmB,EAAA,GAAzDM,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAAAG,EACN1B,mBAAS5H,EAAiBmC,IAAGoH,EAAAxB,YAAAuB,EAAA,GAA1CnH,EAAEoH,EAAA,GAAEZ,GAAKY,EAAA,GAAAG,GACkB9B,mBAAS5H,EAAiB6J,WAAUD,GAAA7B,YAAA2B,GAAA,GAA/DG,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAAAG,GACAnC,mBAAS+B,SAAS3J,EAAiBW,UAASqJ,GAAAjC,YAAAgC,GAAA,GAAnEpJ,GAAOqJ,GAAA,GAAEC,GAAUD,GAAA,GAAAE,GACYtC,mBAASvF,KAAKuN,MAAM5P,EAAiBoK,cAAaD,GAAApC,YAAAmC,GAAA,GAAjFE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAC5B5C,GAAWC,cACjB8C,oBAAU,WACR4E,IACAK,KAEC,CAAChI,KAGJ,IAYsBwD,GAAY8E,GAZ5BhF,GAAe,SAACC,GAGpB,GAFAjM,QAAQC,IAAIsL,IACgB,kBACH0F,KAAK9N,GAA9B,CAKA,IAAM+N,EAAmB,CAAE/N,eAAcG,KAAI8F,MAAKC,QAAOkB,IAAKO,SAASP,GAAMI,QAASG,SAASH,GAAUK,aAAWlJ,WAASoO,UAASjO,YAAa6I,SAAS3J,EAAiBc,aAAcsJ,gBAC3L0E,EAAiBiB,GACjB7I,SANEyI,EAAqB,qDAQrBK,GAAc,GACdb,EACFU,GAAiB1E,IAAAC,cAAC+C,GAAc,CAACC,MAAO,IAC/BgB,EACTS,GAAiB,YAGjBG,IADAjF,GAAa3H,EAAY4H,IAAI,SAACC,GAAQ,MAAO,CAAErV,MAAOqV,EAAE1H,GAAIuD,MAAOmE,EAAElP,SAC5C+F,OAAO,SAAAmJ,GAAC,OAAIA,EAAErV,QAAU+T,SAAS3J,EAAiB6J,aAC3EgG,GAAiB1E,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,KACtDhB,IAAAC,cAACS,KAAKoE,MAAK,KAAC,UACZ9E,IAAAC,cAACsB,KAAM,CAACC,QAAS5B,GAAY6B,aAAcoD,GAAY,GAAInD,cAAc,EAAMP,SAAU,SAACxB,GAAQhB,GAAagB,EAAElV,YAGrH,IAAoBsV,GAAUgF,GAA1BC,GAAY,GAchB,OAbIX,EACFU,GAAe/E,IAAAC,cAAC+C,GAAc,CAACC,MAAO,IAC7BqB,EACTS,GAAe,YAGfC,IADAjF,GAAWzF,EAAUuF,IAAI,SAACC,GAAQ,MAAO,CAAErV,MAAOqV,EAAE1H,GAAIuD,MAAOmE,EAAElP,KAAO,IAAMkP,EAAEmF,QAC3DtO,OAAO,SAAAmJ,GAAC,OAAIA,EAAErV,QAAUoK,EAAiBW,UAC9DuP,GAAe/E,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,KACpDhB,IAAAC,cAACS,KAAKoE,MAAK,KAAC,mBACZ9E,IAAAC,cAACsB,KAAM,CAACC,QAASzB,GAAU0B,aAAcuD,GAAU,GAAItD,cAAc,EAAMP,SAAU,SAACxB,GAAQb,GAAWa,EAAElV,YAK7GuV,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACE,KAAK,CAACrE,KAAMA,EAAMsE,KAAK,KACtB8E,kBAAgB,gCAChBC,UAAQ,GACRnF,IAAAC,cAACE,KAAME,OAAM,CAACC,aAAW,EAACC,QAASxE,GACjCiE,IAAAC,cAACE,KAAMK,MAAK,KAAC,WAEfR,IAAAC,cAACE,KAAMM,KAAI,KACTT,IAAAC,cAACS,KAAI,CAACC,SAAUjB,IACdM,IAAAC,cAACW,KAAG,KACFZ,IAAAC,cAACY,KAAG,KACFb,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKoE,MAAK,KAAC,SACZ9E,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACL4U,YAAY,QACZtQ,KAAK,eACLnG,MAAOoM,GAAgB,GACvBsK,SAAU,SAACxB,GAAC,OAAKtC,EAAgBsC,EAAEyB,OAAO3W,QAC1C4W,WAAS,IAEVkD,GAAqBvE,IAAAC,cAACqB,KAAK,KAAEiD,IAEhCvE,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKoE,MAAK,KAAC,iBACZ9E,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACL4U,YAAY,gBACZtQ,KAAK,KACLnG,MAAOuM,GAAM,GACbmK,SAAU,SAACxB,GAAC,OAAKnC,GAAMmC,EAAEyB,OAAO3W,WAGpCuV,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKoE,MAAK,KAAC,OACZ9E,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,OAAO4U,YAAY,MACpCtQ,KAAK,MACLuQ,SAAU,SAACxB,GAAC,OAAKhC,EAAOgC,EAAEyB,OAAO3W,QACjCA,MAAOqS,GAAO,MAGlBkD,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKoE,MAAK,KAAC,SACZ9E,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,OAAO4U,YAAY,QACpCtQ,KAAK,QACLuQ,SAAU,SAACxB,GAAC,OAAK7B,EAAS6B,EAAEyB,OAAO3W,QACnCA,MAAOsS,GAAS,OAItBiD,IAAAC,cAACY,KAAG,KACFb,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKoE,MAAK,KAAC,OACZ9E,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,OAAO4U,YAAY,MACpCtQ,KAAK,MACLuQ,SAAU,SAACxB,GAAC,OAAKzB,EAAOyB,EAAEyB,OAAO3W,QACjCA,MAAOwT,GAAO,MAGlB+B,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,QACpBf,IAAAC,cAACS,KAAKoE,MAAK,KAAC,qBACZ9E,IAAAC,cAACS,KAAKO,QAAO,CAAC3U,KAAK,OAAO4U,YAAY,oBACpCtQ,KAAK,UACLuQ,SAAU,SAACxB,GAAC,OAAKrB,EAAWqB,EAAEyB,OAAO3W,QACrCA,MAAO4T,GAAW,MAGtB2B,IAAAC,cAACS,KAAKoE,MAAK,KAAC,aACZ9E,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,KACrChB,IAAAC,cAACsB,KAAM,CAACU,SAAO,EAACT,QAAS9F,GAAkBwF,YAAY,YAAYO,aAAcxC,GAAayC,cAAc,EAAMP,SAAU,SAACxB,GAAQT,GAAe,SAAAgD,GAAC,OAAIvC,IAAIjM,QAAQC,IAAIgM,OAG1K+E,GACAK,OAKT/E,IAAAC,cAACE,KAAMgC,OAAM,KACXnC,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQ9B,QAASxE,GAAO,WAGxCiE,IAAAC,cAACmC,KAAM,CAAC9V,KAAK,SAAS+V,QAAQ,QAAQ9B,QAASb,IAAc,iCC1JxD,SAAS0F,KAAiB,IAAA5I,EACbC,mBAAS,GAAE+F,EAAA5F,YAAAJ,EAAA,GAA9BjF,EAAKiL,EAAA,GAAE6C,EAAQ7C,EAAA,GAMtB,OACExC,IAAAC,cAACqF,KAAQ,CAACC,YAAahO,EAAOiO,SALX,SAACC,EAAe9F,GACnC0F,EAASI,KAKPzF,IAAAC,cAACqF,KAASI,KAAI,KACd1F,IAAAC,cAAA,UAAI,aACFD,IAAAC,cAACqF,KAASK,QAAO,KACf3F,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SAAG,gEAGPD,IAAAC,cAACqF,KAASI,KAAI,KACd1F,IAAAC,cAAA,UAAI,uBAEFD,IAAAC,cAACqF,KAASK,QAAO,KACf3F,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,SAAG,8DAGPD,IAAAC,cAACqF,KAASI,KAAI,KACd1F,IAAAC,cAAA,UAAI,SAEFD,IAAAC,cAACqF,KAASK,QAAO,KACf3F,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SAAG,qFC7BE,SAAS2F,GAAWrS,GAAiC,IAA9ByB,EAASzB,EAATyB,UAAW6Q,EAAGtS,EAAHsS,IAAK1Q,EAAU5B,EAAV4B,WAEpD,OACE6K,IAAAC,cAAA,OACE6F,YAAU,SACVC,cAAY,OACZC,MAAO,CACLC,KAAM,MACNC,SAAU,WACVC,UAAW,UAGbnG,IAAAC,cAACmG,KAAK,CACJC,UAAQ,EACRvK,KAAM9G,EACNsR,MAAO,KACPN,MAAO,CACLE,SAAU,QACVK,IAAK,KACLC,MAAO,OAGTxG,IAAAC,cAACmG,KAAM3F,KAAI,KAAEoF,EAAI,MAAG7F,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQjC,KAAK,KAAKG,QAASpL,GAAY,oECdtEsR,GAAe,CAC1BC,OAAQ,CAAC,YAAa,uBAIXC,GAAc,CACzBC,gBAAiB,sCACjBC,oBAAqB,0CCTVC,GAAe,WAAM,IACtBC,EAAaxK,eAAbwK,SASR,OACK/G,IAAAC,cAAC+G,KAAIC,KAAI,CAAC5E,QAAQ,OAAOtB,UAAU,UAAUR,QAAS,WAPrC,UAOuD,SANrEwG,EAASG,WAAWT,IAAchU,MAAM,SAAAkN,GACpCjM,QAAQC,IAAIgM,OAK+D,YCb9EwH,GAAgB,WAAM,IACvBJ,EAAaxK,eAAbwK,SAWR,OACI/G,IAAAC,cAAC+G,KAAIC,KAAI,CAAC5E,QAAQ,QAAQtB,UAAU,UAAUR,QAAS,WATpC,UASuD,SARtEwG,EAASK,YAAY,CACjBC,sBAAuB,IACvBC,sBAAuB,QAMqD,YCb/EC,GAAoB,SAAHhU,GAAmB,IAAdiU,EAAQjU,EAARiU,SAE/B,OACKxH,IAAAC,cAAC+G,KAAIC,KAAI,CAACQ,KAAK,eAAepF,QAAQ,OAAOtB,UAAU,WAAYyG,IC4C7DnH,OA3Cf,WAAkB,IACR/D,EAAaC,eAAbD,SACFoL,EAAkBC,eAClBC,EAActL,EAAS,IAAMA,EAAS,GAAG1L,KAEvC8D,EAAuBwH,YAAY,SAAC/N,GAAY,OAAOA,EAAMkF,YAA7DqB,mBACA8F,EAAmB0B,YAAY,SAAC/N,GAAY,OAAOA,EAAM4L,QAAzDS,eAER,OAAQwF,IAAAC,cAAAD,IAAAE,SAAA,KACNF,IAAAC,cAACW,KAAG,KACFZ,IAAAC,cAACY,KAAG,KACFb,IAAAC,cAAC4H,KAAM,CAACC,GAAG,QAAQC,OAAO,MACxB/H,IAAAC,cAAC+H,IAAS,KACRhI,IAAAC,cAAC4H,KAAOI,MAAK,KACXjI,IAAAC,cAACiI,KAAK,CACJC,IAAI,sBACJC,MAAM,MACNC,OAAO,KACPtH,UAAU,2BACVuH,IAAI,0BAGRtI,IAAAC,cAAC4H,KAAOI,MAAK,CAACR,KAAK,SAAQ,sBAC3BzH,IAAAC,cAAC4H,KAAOU,OAAM,CAACC,gBAAc,qBAC7BxI,IAAAC,cAAC4H,KAAOY,SAAQ,CAACrQ,GAAG,oBAClB4H,IAAAC,cAAC+G,KAAG,CAACjG,UAAU,WACZ2G,EAAkB1H,IAAAC,cAAAD,IAAAE,SAAA,KACjBF,IAAAC,cAAC+G,KAAIC,KAAI,CAACQ,KAAK,SAAQ,QACvBzH,IAAAC,cAAC+G,KAAIC,KAAI,CAACQ,KAAK,cAAa,eAAQ/S,EAAqBsL,IAAAC,cAACyI,KAAK,CAACZ,GAAG,aAAapT,GAA8B,IAC9GsL,IAAAC,cAAC+G,KAAIC,KAAI,CAACQ,KAAK,UAAS,oBAAajN,EAAiBwF,IAAAC,cAACyI,KAAK,CAACZ,GAAG,aAAatN,GAA0B,IACvGwF,IAAAC,cAAC0I,KAAW,CAACC,MAAOhB,GAA4B,GAAIxP,GAAG,sBACrD4H,IAAAC,cAAC0I,KAAYjD,KAAI,CAAC+B,KAAK,eAAczH,IAAAC,cAACsH,GAAiB,KAAC,WACxDvH,IAAAC,cAAC0I,KAAYjD,KAAI,CAAC+B,KAAK,eAAczH,IAAAC,cAACkH,GAAa,SAErDnH,IAAAC,cAAC6G,GAAY,qBC5CZ+B,0BA0BJC,wBCtBFC,GAAc,SAACC,GAExB,OACIhJ,IAAAC,cAACW,KAAG,CAACG,UAAU,OACff,IAAAC,cAACgJ,KAAI,CAACjD,MAAO,CAAEoC,MAAO,UACtBpI,IAAAC,cAACgJ,KAAKzI,MAAK,KAAC,mBACZR,IAAAC,cAACiJ,KAAS,CAAC7G,QAAQ,SACjBrC,IAAAC,cAACiJ,KAAUxD,KAAI,KAAC,cAAOsD,EAAMG,UAAUC,WACvCpJ,IAAAC,cAACiJ,KAAUxD,KAAI,KAAC,aAAWsD,EAAMG,UAAUnO,SAC3CgF,IAAAC,cAACiJ,KAAUxD,KAAI,KAAC,SAAOsD,EAAMG,UAAUE,mBACvCrJ,IAAAC,cAACiJ,KAAUxD,KAAI,KAAC,eAAasD,EAAMG,UAAUG,UAC7CtJ,IAAAC,cAACiJ,KAAUxD,KAAI,KAAC,yBAAoBsD,EAAMG,UAAUI,aACpDvJ,IAAAC,cAACiJ,KAAUxD,KAAI,KAAC,UAAQsD,EAAMG,UAAUK,oBCKnCC,OArBf,WAAiB,IAAAjN,EACSC,mBAAS,IAAG+F,EAAA5F,YAAAJ,EAAA,GAA7B5L,EAAI4R,EAAA,GAAEkH,EAAOlH,EAAA,GAKpB,OACExC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,QAAMU,SANW,SAACgJ,GACpBA,EAAMC,iBACNC,MAAK,6BAAAvS,OAA8B1G,MAK/BoP,IAAAC,cAAA,aAAO,mBACLD,IAAAC,cAAA,SACE3T,KAAK,OACL7B,MAAOmG,EACPuQ,SAAU,SAACxB,GAAC,OAAK+J,EAAQ/J,EAAEyB,OAAO3W,WAGtCuV,IAAAC,cAAA,SAAO3T,KAAK,uBCELwd,OAfd,WAAkB,IACP/C,EAAaxK,eAAbwK,SASR,OAPA5H,oBAAU,WACN4H,EAASgD,eAAe,CACpBC,QAASjD,EAASkD,mBAClBC,mBAAoB,kBAAOC,KAAaC,iBAE7C,CAAErD,IAGD/G,IAAAC,cAAA,WAAK,oBCZE,SAASoK,GAAS9W,GAAoE,IAAjE+W,EAAO/W,EAAP+W,QAASC,EAAShX,EAATgX,UAAWC,EAAOjX,EAAPiX,QAASC,EAASlX,EAATkX,UAAWC,EAAUnX,EAAVmX,WAAqBnX,EAATiB,UAUpF,OACIwL,IAAAC,cAAA,aACKsK,EAAU1K,IAAI,SAACzM,EAAK9C,GACjB,OAAQ0P,IAAAC,cAAA,MAAI1V,IAAK+F,GACXga,EAAQzK,IAAI,SAAA8K,GAAkB,IAAfC,EAAQD,EAARC,SACb,GAAiB,UAAbA,EACA,OAAO5K,IAAAC,cAAA,MAAI1V,IAAKqgB,GACZ5K,IAAAC,cAAC4K,KAAS,CAAC9J,UAAU,WAAWR,QAAS,kBAAMmK,EAAWtX,IAAOwV,MAAM,gBAAW,gBAClF5I,IAAAC,cAAC6K,KAAM,CAAC/J,UAAU,WAAWR,QAAS,kBAAMiK,EAAQpX,IAAOwV,MAAM,UAAU,UAC3E5I,IAAAC,cAAC8K,KAAQ,CAAChK,UAAU,WAAWR,QAAS,kBAAMkK,EAAUrX,IAAOwV,MAAM,aAAQ,WAGrF,GAAiB,gBAAbgC,EASC,CACD,IAAMI,EAAQ5X,EAAKwX,GAAYxX,EAAKwX,GAAY,IAChD,OAAO5K,IAAAC,cAAA,MAAI1V,IAAKqgB,GAAWI,GAV3B,OArBxB,SAAsBC,GAClB,IACI/T,KAAKuN,MAAMwG,GACb,MAAOtL,GACL,OAAO,EAEX,OAAO,EAeiBuL,CAAa9X,EAAKwX,IACX5K,IAAAC,cAAA,MAAI1V,IAAKqgB,GACZ1T,KAAKuN,MAAMrR,EAAKwX,IAAW/K,IAAI,SAAC7L,EAAM1D,GAClC,OAAa,IAANA,EAAU0D,EAAK2H,MAAQ,KAAO3H,EAAK2H,SASnD,uDClClBwP,GAAe,SAAD5X,GAA2B,IAAvB6X,EAAO7X,EAAP6X,QAASC,EAAQ9X,EAAR8X,SAatC,OACErL,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQjC,KAAK,KAAKG,QAAS,SAACZ,GAAC,OAT3B,SAACyL,EAASC,GAC5B,IACMC,EAAK,CAAEC,OAAQ,CAAEnY,KADZoY,KAAWC,cAAcL,IACDM,WAAY,CAAC,SAC1CC,EAAcH,KAAWF,EAAI,CAAEM,SAAU,OAAQtf,KAAM,UACvD8G,EAAO,IAAIyY,KAAK,CAACF,GAAc,CAAErf,KAPvC,oFAQAwf,kBAAO1Y,EAAMiY,EAPO,SAW8BU,CAAYX,EAASC,KAAW,gBCXvE,SAASW,GAAWzY,GAEM,IADrCH,EAAIG,EAAJH,KAAMkX,EAAO/W,EAAP+W,QAASxV,EAASvB,EAATuB,UAAWC,EAASxB,EAATwB,UAAWkX,EAAU1Y,EAAV0Y,WAAYxB,EAASlX,EAATkX,UAAWD,EAAOjX,EAAPiX,QAASE,EAAUnX,EAAVmX,WAAWlW,EAASjB,EAATiB,UAE1E4H,EAAWC,cACT3B,EAAgBwB,YAAY,SAAC/N,GAAY,OAAOA,EAAMsN,cAAtDf,YAEF2Q,EAAW,WADC,IAAIa,MAAOC,mBAAmB,SACT3P,EACDC,mBAAS,GAAE+F,EAAA5F,YAAAJ,EAAA,GAA1C4P,EAAW5J,EAAA,GAAE6J,EAAc7J,EAAA,GAAA3F,EACEJ,mBAAS6P,KAAKC,KAAKnZ,EAAK/C,OAASqK,IAAasC,EAAAJ,YAAAC,EAAA,GAA3E2P,EAAUxP,EAAA,GAAEyP,EAAazP,EAAA,GAAAG,EACEV,mBAAS,IAAGW,EAAAR,YAAAO,EAAA,GAAvChE,EAASiE,EAAA,GAAEsP,EAAYtP,EAAA,GAAAE,EACEb,mBAAS,GAAEc,EAAAX,YAAAU,EAAA,GAApCqP,EAAQpP,EAAA,GAAEqP,EAAWrP,EAAA,GAAAE,EACZhB,mBAAS+B,SAAS,IAA3BqO,EAA8BjQ,YAAAa,EAAA,GAAzB,GAEZ0B,oBAAU,WAGkBuN,EAAH,IAAhBN,EAAgChZ,EAAKxB,MAAM,EAAG8I,GAElCtH,EAAKxB,MAAMwa,EAAc1R,EAAa0R,EAAc1R,EAAcA,KAEnF,CAAC0R,EAAa1R,EAAa5F,EAAWC,EAAW4X,IAErD,IAmBMG,EAAkB1J,MAAMoJ,GAAYnJ,KAAK,IAAIxD,IAAI,SAACkN,EAAGzc,GACvD,OAAO0P,IAAAC,cAAC+M,KAAWtH,KAAI,CAACM,MAAO,CAAEiH,MAAO,SAAW1iB,IAAK+F,EACpD4c,OAAQ5c,IAAM8b,EAAa7L,QAAS,WArBZ,IAAC4M,IAqB2C7c,EApBxEoD,QAAQC,IAAIwZ,GACZd,EAAec,KAoBV7c,EAAI,KAEb,OAAQ0P,IAAAC,cAAAD,IAAAE,SAAA,KAEJF,IAAAC,cAACmN,KAAK,CAACC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACpN,KAAK,MAC1CJ,IAAAC,cAACwN,GAAW,CAACnD,QAASA,EAASxV,UAAWA,EAAWC,UAAWA,EAAW2Y,cAAezB,EAAYzX,UAAWA,IACjHwL,IAAAC,cAACoK,GAAS,CAACC,QAASA,EAASC,UAAWpR,EACpCuR,WAAYA,EACZF,QAASA,EACTC,UAAWA,EACXjW,UAAWA,KAGnBwL,IAAAC,cAACW,KAAG,KACAZ,IAAAC,cAACY,KAAG,CAAC8M,GAAI,GACL3N,IAAAC,cAACS,KAAKa,OAAM,CAACnB,KAAK,KAAKwN,aAAW,yBAAyBzM,SAjCvC,SAACxB,GAC7B,IAAMkO,EAAiBrP,SAASmB,EAAEyB,OAAO3W,OACnCqjB,EAAgBxB,KAAKC,KAAKnZ,EAAK/C,OAASwd,GAC9ClO,EAAEiK,iBACFxN,EAASf,GAAoBwS,IACzBC,EAAgBtB,GAChBH,EAAe,GAEnBI,EAAcqB,KA0BF9N,IAAAC,cAAA,UAAQxV,MAAM,GAAGsjB,UAAQ,GAAC,mBAC1B/N,IAAAC,cAAA,UAAQxV,MAAM,MAAK,MACnBuV,IAAAC,cAAA,UAAQxV,MAAM,MAAK,MACnBuV,IAAAC,cAAA,UAAQxV,MAAM,MAAK,QAG3BuV,IAAAC,cAACY,KAAG,KACAb,IAAAC,cAAC+M,KAAU,CAAChH,MAAO,CAAEgI,KAAM,SAAW5N,KAAK,MACvCJ,IAAAC,cAAC+M,KAAWiB,MAAK,CAAC1N,QAAS,kBAAM8L,EAAe,MAChDrM,IAAAC,cAAC+M,KAAWkB,KAAI,CAAC3N,QAAS,WAhClC6L,EAAcS,GACdR,EAAeD,EAAc,MAgCrBpM,IAAAC,cAAC+M,KAAWmB,SAAQ,CAAC5N,QAASoM,GAAYE,EAAQ,kBAAMD,EAAY,SAAA9M,GAAC,OAAIA,EAAK+M,KAAS,OACtFC,EAAgBlb,MAAM+a,EAAUA,EAAWE,GAC5C7M,IAAAC,cAAC+M,KAAWmB,SAAQ,CAAC5N,QAASoM,EAAYH,EAAaK,EAAS,kBAAMD,EAAY,SAAA9M,GAAC,OAAIA,EAAK+M,KAAS,OACrG7M,IAAAC,cAAC+M,KAAWoB,KAAI,CAAC7N,QAAS6L,EAAcI,EAAa,EAAI,kBAAMH,EAAeD,EAAc,IAAK,OACjGpM,IAAAC,cAAC+M,KAAWqB,KAAI,CAAC9N,QAAS,kBAAM8L,EAAeG,EAAa,QAGpExM,IAAAC,cAACY,KAAG,CAAC8M,GAAI,GACL3N,IAAAC,cAACkL,GAAc,CAACC,QAAShY,EAAMiY,SAAUA,qBClFzC,SAASoC,GAAWla,GAAuD,IAArD+W,EAAO/W,EAAP+W,QAAQoD,EAAana,EAAbma,cAAc5Y,EAASvB,EAATuB,UAAUC,EAASxB,EAATwB,UAAmBxB,EAATiB,UAO5E,OAEIwL,IAAAC,cAAA,aACID,IAAAC,cAAA,MAAI1V,IAAK+jB,YAAO,IACXhE,EAAQzK,IAAI,SAAA8K,GAA6B,IAA3BhP,EAAKgP,EAALhP,MAAMiP,EAAQD,EAARC,SAAS2D,EAAQ5D,EAAR4D,SACpBC,EAASD,EACXzZ,IAAY8V,GAAyB,QAAb7V,EACtBiL,IAAAC,cAACwO,KAAkB,MACpB3Z,IAAY8V,GAAyB,SAAb7V,EACvBiL,IAAAC,cAACyO,KAAoB,MACrB1O,IAAAC,cAACwO,KAAkB,MACpB,GAEL,OAAOzO,IAAAC,cAAA,MACP1V,IAAKqgB,EACLrK,QAASgO,EAAW,kBApBV,SAAC3D,GACvBlX,QAAQC,IAAIiX,GAEZ8C,EAAc9C,EADKA,IAAW9V,GAA0B,QAAbC,EAAqB,OAAS,OAkBrC4Z,CAAoB/D,IAAY,MACvDjP,EAAM,IAAE6S,OCwFdI,OA5Gf,SAAoBrb,GAAc,IAAZuI,EAAIvI,EAAJuI,KAAKC,EAAKxI,EAALwI,MACjBK,EAASC,cACRC,EAAUC,eAAVD,SAAQE,EACDC,mBAASH,EAAS,GAAGI,UAA5BC,EAAqCC,YAAAJ,EAAA,GAAhC,GAAAK,EAC8BJ,mBAAS,IAAGO,EAAAJ,YAAAC,EAAA,GAA/CgS,EAAa7R,EAAA,GAAE8R,EAAgB9R,EAAA,GAAAG,EACVV,mBAAS,CAAE7L,KAAK,GAAGme,MAAM,GAAGC,MAAM,GAAG/J,IAAI,GAAGgK,MAAM,GAAGtS,UAAOS,EAAAR,YAAAO,EAAA,GAAjF+R,EAAM9R,EAAA,GAAE+R,EAAS/R,EAAA,GAIlBgS,EAAe,SAACzF,GAClB,IAAM/Y,EAAO+Y,EAAMvI,OAAOxQ,KACpBnG,EAAQkf,EAAMvI,OAAO3W,MAC3B0kB,EAAU,SAAAniB,GAAM,IAAAqiB,EAAA,OAAA5X,YAAA,GAASzK,GAAMqiB,EAAA,GAAA5P,YAAA4P,EAAGze,EAAOnG,GAAKgV,YAAA4P,EAAA,QAAC1S,GAAK0S,OAIlD3P,EAAe,SAACC,GAEA,kBACHgF,KAAKuK,EAAOte,OAI7BwL,EAASpC,EAAQkV,IACjBnT,KAJE+S,EAAiB,qDAMrB,OACA9O,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACE,KAAK,CAACrE,KAAMA,GACTkE,IAAAC,cAACE,KAAME,OAAM,CAACC,aAAW,EAACC,QAASxE,GACjCiE,IAAAC,cAACE,KAAMK,MAAK,KAAC,2BAEfR,IAAAC,cAACE,KAAMM,KAAI,KACTT,IAAAC,cAACS,KAAI,CAACC,SAAUjB,GACdM,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACL4U,YAAY,qBACZtQ,KAAK,OACLuQ,SAAUiO,EACV3kB,MAAOykB,EAAOte,KACdyQ,WAAS,KAGZwN,GAAiB7O,IAAAC,cAACqB,KAAK,KAAEuN,GAC1B7O,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACL4U,YAAY,QACZtQ,KAAK,QACLuQ,SAAUiO,EACV3kB,MAAOykB,EAAOH,SAGlB/O,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,QACL4U,YAAY,QACZtQ,KAAK,QACLuQ,SAAUiO,EACV3kB,MAAOykB,EAAOF,SAGlBhP,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACL4U,YAAY,aACZtQ,KAAK,QACLuQ,SAAUiO,EACV3kB,MAAOykB,EAAOD,SAGlBjP,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,SACL4U,YAAY,MACZzW,MAAOykB,EAAOjK,IACdrU,KAAK,MACLuQ,SAAUiO,KAGdpP,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACXqO,QAAQ,EACRhjB,KAAK,OACL4U,YAAY,QACZzW,MAAOkS,EACPoR,UAAU,EACVnd,KAAK,aAMboP,IAAAC,cAACE,KAAMgC,OAAM,KACXnC,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQ9B,QAASxE,GAAO,WAGxCiE,IAAAC,cAACmC,KAAM,CAAC9V,KAAK,SAAS+V,QAAQ,QAAQ9B,QAASb,GAAc,aCnGxD,SAAS6P,GAAYhc,GAAmB,IAAjBuI,EAAIvI,EAAJuI,KAAKC,EAAKxI,EAALwI,MAAM9B,EAAI1G,EAAJ0G,KACvCqC,EAAaC,eAAbD,SAAQE,EACEC,mBAASH,EAAS,GAAGI,UAAhCkH,EAAyChH,YAAAJ,EAAA,GAAlC,GAAAK,EACsBJ,mBAAS,IAAGO,EAAAJ,YAAAC,EAAA,GAAvC2S,EAASxS,EAAA,GAAEyS,EAAYzS,EAAA,GACxBZ,EAASC,cAAcc,EAEDV,mBAAS,CACnC7L,KAAKqJ,EAAKrJ,KACVme,MAAM9U,EAAK8U,MACX9J,IAAIhL,EAAKgL,IACTgK,MAAMhV,EAAKgV,MACXD,MAAM/U,EAAK+U,MACX5W,GAAG6B,EAAK7B,KACNgF,EAAAR,YAAAO,EAAA,GAPG+R,EAAM9R,EAAA,GAAE+R,EAAS/R,EAAA,GAQlBgS,EAAe,SAACzF,GAClB,IAAM/Y,EAAO+Y,EAAMvI,OAAOxQ,KACpBnG,EAAQkf,EAAMvI,OAAO3W,MAC3B0kB,EAAU,SAAAniB,GAAM,IAAAqiB,EAAA,OAAA5X,YAAA,GAASzK,GAAMqiB,EAAA,GAAA5P,YAAA4P,EAAGze,EAAOnG,GAAKgV,YAAA4P,EAAA,KAAIpV,EAAK7B,IAAEqH,YAAA4P,EAAA,UAACzL,GAAOyL,OAG/D3P,EAAe,SAACC,GACA,kBACHgF,KAAKuK,EAAOte,OAI7B8C,QAAQC,IAAIub,GACZ9S,EAASjC,GAAW+U,IAEpBnT,KANE0T,EAAa,qDAUnB,OACEzP,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACE,KAAK,CAACrE,KAAMA,GACTkE,IAAAC,cAACE,KAAME,OAAM,CAACC,aAAW,EAACC,QAASxE,GACjCiE,IAAAC,cAACE,KAAMK,MAAK,KAAC,WAEfR,IAAAC,cAACE,KAAMM,KAAI,KACTT,IAAAC,cAACS,KAAI,CAACC,SAAUjB,GACdM,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACLsE,KAAK,OACLnG,MAAOykB,EAAOte,KACduQ,SAAUiO,EACV/N,WAAS,KAGZmO,GAAaxP,IAAAC,cAACqB,KAAK,KAAEkO,GACtBxP,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACLsE,KAAK,QACLuQ,SAAUiO,EACV3kB,MAAOykB,EAAOH,SAGlB/O,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACLsE,KAAK,QACLuQ,SAAUiO,EACV3kB,MAAOykB,EAAOF,SAGlBhP,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACLsE,KAAK,QACLuQ,SAAUiO,EACV3kB,MAAOykB,EAAOD,SAGlBjP,IAAAC,cAACS,KAAKI,MAAK,CAACC,UAAU,OAAOC,UAAU,6BACrChB,IAAAC,cAACS,KAAKO,QAAO,CACX3U,KAAK,OACL4U,YAAY,MACZC,SAAUiO,EACV3kB,MAAOykB,EAAOjK,IACdrU,KAAK,WAKboP,IAAAC,cAACE,KAAMgC,OAAM,KACXnC,IAAAC,cAACmC,KAAM,CAACC,QAAQ,OAAO9B,QAASxE,GAAO,SAGvCiE,IAAAC,cAACmC,KAAM,CAAC9V,KAAK,SAAS+V,QAAQ,UAAU9B,QAASb,GAAc,mBC5F1D,SAASgQ,GAAsBnc,GAAgC,IAA7BuI,EAAIvI,EAAJuI,KAAMC,EAAKxI,EAALwI,MAAO4T,EAAYpc,EAAZoc,aAC5D,OACE3P,IAAAC,cAACE,KAAK,CAACC,KAAK,KAAKwP,gBAAgB,eAAe9T,KAAMA,GACpDkE,IAAAC,cAACE,KAAME,OAAM,KACXL,IAAAC,cAACE,KAAMK,MAAK,KAACR,IAAAC,cAAA,UAAI,uCAGnBD,IAAAC,cAACE,KAAMM,KAAI,KACRkP,EAAa9Y,cAEhBmJ,IAAAC,cAACE,KAAMgC,OAAM,KACXnC,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQ9B,QAASxE,GAAO,aCTjC,oCCHT8T,GAASC,aAASC,QAAAC,aAAA,sGASXC,GAAcC,KAAOC,IAAGC,QAAAJ,aAAA,4eAItBH,aCbFQ,GAAiB,SAACrc,GAQ3B,IAAMsc,GAAU,IAAIpE,MAAOC,mBAAmB,SACxCoE,EAAiB,IAAIC,SAAE,CACzBC,aAAc,CAAC,KAAM,MACrBvN,KAAM,CACF,IAAIwN,YAAS,CACTlJ,SAAU,CACN,IAAImJ,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,qBAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,MACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,0DAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,sBAOvCC,EAAkB,IAAIP,SAAE,CAC1BC,aAAc,CAAC,KAAM,MACrBvN,KAAM,CACF,IAAIwN,YAAS,CACTlJ,SAAU,CACN,IAAImJ,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,WAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,WAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,iBAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,qBAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,0BAIrC,IAAIJ,YAAS,CACTlJ,SAAU,CACN,IAAImJ,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,SAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,iBAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,4BAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,qBAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,wBAQvCE,EAAiC9Z,KAAKuN,MAAMzQ,EAAKiL,aAAaY,IAAI,SAACqC,EAAE5R,GACvE,OAAO,IAAIogB,YAAS,CAChBlJ,SAAU,CACN,IAAImJ,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,cAAWxgB,EAAE,GAAG6F,eAEnC,IAAIwa,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU5O,EAAEvG,eAOrCsV,EAA8B,IAAIT,SAAE,CACtCC,aAAc,CAAC,KAAM,MACrBvN,KAAI,CACA,IAAIwN,YAAS,CACTlJ,SAAU,CACN,IAAImJ,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,UAE7B,IAAIH,aAAU,CACVvI,MAAO,CACHhI,KAAM,KACN9T,KAAMskB,aAAUC,KAEpBrJ,SAAU,CAAC,IAAIsJ,aAAU,gBAGnCxZ,OAAAvB,YACEib,MAKTE,EAAM,IAAIC,YAAS,CAEtBC,QAASpd,EAAK2I,MACd0U,YAAa,2CACbzI,MAAO,0CAAoC5U,EAAK6C,aAChDya,OAAQ,CACJC,gBAAiB,CACb,CACInZ,GAAI,qBACJxH,KAAM,uBACN4gB,QAAS,WACTpiB,KAAM,WACNqiB,aAAa,EACbC,IAAK,CACDC,SAAS,EACT1E,MAAO,aAKvB2E,SAAU,CACN,CACIC,WAAY,GACZrK,SAAU,CAEN+I,EACA,IAAIO,aAAU,IACdC,EACA,IAAID,aAAU,IACd,IAAIA,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,kBAAcxB,MAGlC,IAAIQ,aAAU,IACd,IAAIA,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAK,iFACLC,MAAM,OAIlB,IAAIlB,aAAU,IACd,IAAIA,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAI,mUAMhB,IAAIjB,aAAU,IACd,IAAIA,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,8CAMpB,IAAIhB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,mBAAe/d,EAAKie,SAAW,yCAGzC,IAAIH,WAAQ,CACRC,KAAM/d,EAAKke,QACXF,MAAM,OAKlB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,+CAKlB,IAAIjB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,2CAAsC/d,EAAKgb,WAM7D,IAAI8B,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,oBAAoB/d,EAAK6C,kBAM3C,IAAIia,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,iCACNC,MAAK,OAMjB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,mBAAqB/d,EAAK8I,IAChCkV,MAAK,OAMjB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,qBAAuB/d,EAAK+I,MAClCiV,MAAK,OAMjB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,6BAA+B/d,EAAKgD,GAC1Cgb,MAAK,OAMjB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,SAAW/d,EAAKiK,IACtB+T,MAAK,OAMjB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,6BAA+B/d,EAAKgD,GAC1Cgb,MAAK,OAMjB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,oCAA4B/d,EAAKqK,QAAS,WAChD2T,MAAK,OAMjB,IAAIlB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAI,qDAKhB,IAAIjB,aAAU,CACVtJ,SAAU,CACN,IAAIsK,WAAQ,CACRC,KAAM,gCACNC,MAAK,OAKjBf,OAOhBkB,UAAOC,OAAOlB,GAAKljB,KAAK,SAAAqkB,GACpB3e,QAAQC,IAAI0e,GACZvG,kBAAOuG,EAAM,kCAAkCre,EAAK6C,aAAc,SAClEnD,QAAQC,IAAI,oCC7WD,SAAS2e,KAAkB,IAAAzO,EAC2BvB,GAAS1P,GAAekR,EAAAlH,YAAAiH,EAAA,GAAlF0O,EAAgBzO,EAAA,GAAE0O,EAAkB1O,EAAA,GAAE2O,EAAgB3O,EAAA,GAAAI,EACe5B,GAASrO,GAAekQ,EAAAvH,YAAAsH,EAAA,GAA7FwO,EAAgBvO,EAAA,GAAEwO,EAAuBxO,EAAA,GAAEyO,EAAsBzO,EAAA,GAAA0O,EACNvQ,GAAShP,GAAYwf,EAAAlW,YAAAiW,EAAA,GAAhFE,EAAaD,EAAA,GAAEE,EAAoBF,EAAA,GAAEG,EAAkBH,EAAA,GAAAI,EACa5Q,GAASvO,GAAeof,EAAAvW,YAAAsW,EAAA,GAA5FE,EAAgBD,EAAA,GAAEE,EAAuBF,EAAA,GAAEG,EAAqBH,EAAA,GAAA3W,EACnBC,oBAAS,GAAM+F,EAAA5F,YAAAJ,EAAA,GAA5D+W,EAAoB/Q,EAAA,GAAEgR,EAAmBhR,EAAA,GAAA3F,EACMJ,oBAAS,GAAMO,EAAAJ,YAAAC,EAAA,GAA9D4W,EAAqBzW,EAAA,GAAE0W,EAAoB1W,EAAA,GAAAG,EAClBV,qBAAUW,EAAAR,YAAAO,EAAA,GAAnC3J,EAAQ4J,EAAA,GAAEuW,EAAWvW,EAAA,GAAAnB,EACiDC,YAAY,SAAC/N,GAAY,OAAOA,EAAMkF,YAA3GoB,EAAawH,EAAbxH,cAAeG,EAAMqH,EAANrH,OAAQE,EAASmH,EAATnH,UAAWC,EAASkH,EAATlH,UAAWC,EAASiH,EAATjH,UAAWC,EAAQgH,EAARhH,SAE1DmH,EAAWC,cACjB8C,oBAAU,WACNoT,KACD,CAACnW,EAAUxH,IAEd,IAsCIgf,EACJ,GAAIpB,GAAsBG,GAA2BK,GAAwBK,EACzEO,EAAU5T,IAAAC,cAACgQ,GAAW,WAErB,GAAIwC,GAAoBG,GAA0BK,GAAsBK,EACzEM,EAAU5T,IAAAC,cAAA,WAAK,gBACZ,CAcH2T,EACI5T,IAAAC,cAAC+L,GAAW,CAAC5Y,KAAMqB,EAAe6V,QAdtB,CACZ,CAAE3O,MAAO,KAAMiP,SAAU,cAAe2D,UAAU,GAClD,CAAE5S,MAAO,OAAQiP,SAAU,eAAgB2D,UAAU,GACrD,CAAE5S,MAAO,QAASiP,SAAU,WAAY2D,UAAU,GAClD,CAAE5S,MAAO,MAAOiP,SAAU,MAAO2D,UAAU,GAC3C,CAAE5S,MAAO,KAAMiP,SAAU,KAAM2D,UAAU,GACzC,CAAE5S,MAAO,SAAUiP,SAAU,aAAc2D,UAAU,GACrD,CAAE5S,MAAO,aAASiP,SAAU,QAAS2D,UAAU,GAC/C,CAAE5S,MAAO,YAAaiP,SAAU,cAAe2D,UAAU,GACzD,CAAE5S,MAAO,kBAAmBiP,SAAU,aAAc2D,UAAU,GAC9D,CAAE5S,MAAO,oBAAqBiP,SAAU,aAAc2D,UAAU,GAChE,CAAE5S,MAAO,QAASiP,SAAU,QAAS2D,UAAU,IAGKzZ,UAAWA,EAAWC,UAAWA,EAAWkX,WArCrF,SAACnX,EAAWC,GAC3BrB,QAAQC,IAAIoB,EAAWD,GACvBsH,EAASvG,EAAc,CAAEf,YAAWC,gBAmCwF0V,UAjD3G,SAACzW,GAClBN,QAAQC,IAAIK,GACZof,EAAiBpf,IA+CoIwW,QA7CtI,SAACxW,GAChB0f,GAAqB,GACrBC,EAAY3f,IA2C8J0W,WAAY2F,KAG1L,OACIrQ,IAAAC,cAAAD,IAAAE,SAAA,KACKlL,GAAagL,IAAAC,cAAC2F,GAAW,CAAC5Q,UAAWA,EAAW6Q,IAAK5Q,EAAUE,WA9B/C,WACrBiH,EAASjH,QA8BJoe,GAAwBvT,IAAAC,cAACpE,GAAe,CAACC,KAAMyX,EAAsBxX,MA7DlD,WACxByX,GAAoB,IA4DkFxX,gBAlClF,SAAChI,GACrB+e,EAAc/e,MAkCTyf,GAAyBzT,IAAAC,cAACyD,GAAgB,CAAClQ,SAAUA,EAAUsI,KAAM2X,EAAuB1X,MA3DxE,WACzB2X,GAAqB,IA0DyG/P,iBAtCzG,SAAC3P,GACtB0e,EAAiB1e,MAuCbgM,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQ9B,QApEN,WACtBiT,GAAoB,KAmEoCxT,IAAAC,cAAC4T,KAAK,MAAG,qBAE7D7T,IAAAC,cAAC+H,IAAS,CAACjH,UAAU,OACjBf,IAAAC,cAACS,KAAI,CAACC,SAAU,SAAChB,GAAQA,EAAEiK,mBACvB5J,IAAAC,cAACS,KAAKO,QAAO,CAACrQ,KAAK,SAASnG,MAAOmK,EAAQsM,YAAY,aAAaC,SAtD/D,SAACxB,GAClBvD,EAASxG,EAAe+J,EAAEyB,OAAO3W,YAsDxBmpB,ICzFjB,IAAME,GAAU5D,KAAOC,IAAGJ,QAAAC,aAAA,0FAOpB+D,GAAS7D,KAAOC,IAAI6D,MAAM,SAAAhL,GAAK,MAAK,CACxCiL,aAAcjL,EAAMkL,SADPhE,CAEZE,QAAAJ,aAAA,mNAEY,SAAAhH,GAAK,OAAIA,EAAMiL,eASf,SAASE,KACtB,IAAM/X,EAAWC,cACjB8C,oBAAU,WACR/C,EAAStE,KACTsE,EAAStC,KACTsC,EAASxJ,KACTwJ,EAAS5D,MACR,CAAC4D,IAAU,IAeVwX,EAdInf,EAAkByH,YAAY,SAAC/N,GAAY,OAAOA,EAAMkF,YAAxDoB,cACAwD,EAAgBiE,YAAY,SAAC/N,GAAY,OAAOA,EAAM4J,UAAtDE,YACAe,EAAakD,YAAY,SAAC/N,GAAY,OAAOA,EAAMsK,OAAnDO,SAAQob,EACiBlY,YAAY,SAAC/N,GAAY,OAAOA,EAAM4L,QACjEsa,EAAgB,CACpB,CAAEC,MAAS7f,EAAe8f,QAAW,aACrC,CAAED,MAASrc,EAAasc,QAAW,WACnC,CAAED,MAAStb,EAAUub,QAAW,QAChC,CAAED,MALaF,EAAT9Z,UAKgBia,QAAW,qBAanC,OALEX,EAb0BQ,EAAT5f,UAaRwL,IAAAC,cAACgQ,GAAW,MAEZoE,EAAcxU,IAPP,SAAC7L,GACjB,OAAAyD,YAAA,GAAYzD,EAAI,CAAEsgB,MAAOtgB,EAAKsgB,MAAMjkB,OAAQ+X,MAAO5J,SAASxK,EAAKsgB,MAAMjkB,YAMjCkB,UAAUsO,IAAI,SAAC7L,GACrD,OAAOgM,IAAAC,cAAC8T,GAAM,CAACxpB,IAAK+jB,cAAU4F,OAAQlgB,EAAKoU,OAAOpI,IAAAC,cAAA,UAAKjM,EAAKugB,SAAa,mBAAOvgB,EAAKsgB,SAGrFtU,IAAAC,cAAC6T,GAAO,KACLpgB,QAAQC,IAAIc,EAAcpE,OAAS,GAAK6b,KAAKzX,EAAc,GAAG+f,aAC9DZ,GCpDQ,SAASa,KAAa,IAAAxY,EACuBC,YAAY,SAAA/N,GAAK,OAAIA,EAAMsK,OAA3ES,EAAO+C,EAAP/C,QAASD,EAAYgD,EAAZhD,aAAcnE,EAASmH,EAATnH,UAAWC,EAASkH,EAATlH,UAAS8O,EACDvB,GAAS9J,GAAUsL,EAAAlH,YAAAiH,EAAA,GAA9D6Q,EAAW5Q,EAAA,GAAE6Q,EAAa7Q,EAAA,GAAE8Q,EAAW9Q,EAAA,GAExC1H,EAAWC,cACjB8C,oBAAU,WACNuV,KACD,CAACtY,EAAUlD,IACd,IAWI0a,EAASiB,EAXPzF,EAAe,SAACzP,GAClB,IAAMlV,EAAQkV,EAAEyB,OAAO3W,MACjBmG,EAAO+O,EAAEyB,OAAOxQ,KACtBwL,EAAShD,EAAS3B,YAAA,GAAMyB,EAAOuG,YAAA,GAAG7O,EAAOnG,OAS7C,GAAIkqB,EACAf,EAAU5T,IAAAC,cAACgQ,GAAW,WAErB,GAAI2E,EACLhB,EAAU5T,IAAAC,cAAA,WAAK,gBACZ,CAUH2T,EACI5T,IAAAC,cAAC+L,GAAW,CAAC5Y,KAAM6F,EAAcqR,QAVrB,CACZ,CAAE3O,MAAO,KAAMiP,SAAU,KAAM2D,UAAU,GACzC,CAAE5S,MAAO,SAAUiP,SAAU,SAAU2D,UAAU,GACjD,CAAE5S,MAAO,YAAaiP,SAAU,YAAa2D,UAAU,GACvD,CAAE5S,MAAO,QAASiP,SAAU,QAAS2D,UAAU,GAC/C,CAAE5S,MAAO,KAAMiP,SAAU,KAAM2D,UAAU,GACzC,CAAE5S,MAAO,MAAOiP,SAAU,MAAO2D,UAAU,GAC3C,CAAE5S,MAAO,OAAQiP,SAAU,OAAQ2D,UAAU,IAGMxZ,UAAWA,EAC1DD,UAAWA,EAAWmX,WAxBf,SAACnX,EAAWC,GAC3BrB,QAAQC,IAAIoB,EAAWD,GACvBsH,EAAS7C,EAAS,CAAEzE,YAAWC,kBAyBnC,IAAM+f,EAAS7b,EAAa4G,IAAI,SAAAzM,GAAI,OAAIA,EAAKuF,SACzCoc,EAAehf,YAAO,IAAIif,IAAIF,IAC5BG,EAAQhc,EAAa4G,IAAI,SAAAzM,GAAI,OAAIA,EAAKyF,QACxCqc,EAAcnf,YAAO,IAAIif,IAAIC,IAC3BE,EAASlc,EAAa4G,IAAI,SAAAzM,GAAI,OAAIA,EAAK0F,MACzCsc,EAAerf,YAAO,IAAIif,IAAIG,IAE5BE,EAAQpc,EAAa4G,IAAI,SAAAzM,GAAI,OAAIA,EAAKsG,KACxC4b,EAAcvf,YAAO,IAAIif,IAAIK,IA+CjC,OA9CAR,EAAiB7U,IAAAC,cAAAD,IAAAE,SAAA,KAEbF,IAAAC,cAACY,KAAG,KACAb,IAAAC,cAACS,KAAKoE,MAAK,KAAC,UACZ9E,IAAAC,cAACS,KAAKa,OAAM,CAACJ,SAAUiO,EAAcxe,KAAK,SAASnG,MAAOyO,EAAQP,QAC9DqH,IAAAC,cAAA,UAAQ1V,IAAI,IAAIE,MAAM,IAAG,aACxBsqB,EAAgBlV,IAAI,SAAC0V,EAAGjlB,GACrB,OAAO0P,IAAAC,cAAA,UAAQ1V,IAAK+F,GAAIilB,OAIpCvV,IAAAC,cAACY,KAAG,KACAb,IAAAC,cAACS,KAAKoE,MAAK,KAAC,SACZ9E,IAAAC,cAACS,KAAKa,OAAM,CAACJ,SAAUiO,EAAcxe,KAAK,QAAQnG,MAAOyO,EAAQN,MAAOsI,YAAY,SAChFlB,IAAAC,cAAA,UAAQ1V,IAAI,IAAIE,MAAM,GAAG+qB,UAAQ,GAAC,aACjCF,EAAezV,IAAI,SAAC0V,EAAGjlB,GACpB,OAAO0P,IAAAC,cAAA,UAAQ1V,IAAK+F,GAAIilB,OAIpCvV,IAAAC,cAACY,KAAG,KACAb,IAAAC,cAACS,KAAKoE,MAAK,KAAC,SACZ9E,IAAAC,cAACS,KAAKa,OAAM,CAACJ,SAAUiO,EAAcxe,KAAK,QAAQnG,MAAOyO,EAAQL,OAC7DmH,IAAAC,cAAA,UAAQ1V,IAAI,IAAIE,MAAM,IAAG,aACxByqB,EAAerV,IAAI,SAAC0V,EAAGjlB,GACpB,OAAO0P,IAAAC,cAAA,UAAQ1V,IAAK+F,GAAIilB,OAIpCvV,IAAAC,cAACY,KAAG,KACAb,IAAAC,cAACS,KAAKoE,MAAK,KAAC,qBACZ9E,IAAAC,cAACS,KAAKa,OAAM,CAACJ,SAAUiO,EAAcxe,KAAK,MAAMnG,MAAOyO,EAAQJ,KAC3DkH,IAAAC,cAAA,UAAQ1V,IAAI,IAAIE,MAAM,IAAG,aACxB2qB,EAAgBvV,IAAI,SAAC0V,EAAGjlB,GACrB,OAAO0P,IAAAC,cAAA,UAAQ1V,IAAK+F,GAAIilB,OAIpCvV,IAAAC,cAACY,KAAG,KAGAb,IAAAC,cAACmC,KAAM,CAAC7B,QAAS,kBAAMnE,EAAS/C,MAAiBgJ,QAAQ,OAAOjC,KAAK,MAAK,4BAM9EJ,IAAAC,cAAC+H,IAAS,KAENhI,IAAAC,cAACW,KAAG,KAECiU,GAEL7U,IAAAC,cAACW,KAAG,KACCgT,ICtGF,SAAS6B,KAAc,IAAA5R,EACiBvB,GAASxI,GAAWgK,EAAAlH,YAAAiH,EAAA,GAAlEO,EAAYN,EAAA,GAAEO,EAAcP,EAAA,GAAEQ,EAAYR,EAAA,GAAAtH,EACLC,oBAAS,GAAM+F,EAAA5F,YAAAJ,EAAA,GAApDkZ,EAAgBlT,EAAA,GAAEmT,EAAenT,EAAA,GAAA3F,EACMJ,oBAAS,GAAMO,EAAAJ,YAAAC,EAAA,GAAtD+Y,EAAiB5Y,EAAA,GAAE6Y,EAAgB7Y,EAAA,GAAAG,EACkBV,oBAAS,GAAMW,EAAAR,YAAAO,EAAA,GAApE2Y,EAAsB1Y,EAAA,GAAE2Y,EAAyB3Y,EAAA,GAAAnB,EACMC,YAAY,SAAC/N,GAAY,OAAOA,EAAM4L,QAA5FO,EAAS2B,EAAT3B,UAAWG,EAAQwB,EAARxB,SAAU7F,EAAMqH,EAANrH,OAAQE,EAASmH,EAATnH,UAAWC,EAASkH,EAATlH,UACxCJ,EAAyBuH,YAAY,SAAC/N,GAAY,OAAOA,EAAMkF,YAA/DsB,qBACFyH,EAAWC,cAEjB8C,oBAAU,WACRiF,KACC,CAAChI,EAAUxH,IACduK,oBAAU,WACR/C,EAASxJ,MACR,CAACwJ,IACJ,IAuCIwX,EACJ,GAAIvP,EACDuP,EAAU5T,IAAAC,cAACgQ,GAAW,WAClB,GAAI3L,EACTsP,EAAU5T,IAAAC,cAACqB,KAAK,CAACe,QAAQ,UAAS,8DAE/B,CAaHuR,EACE5T,IAAAC,cAAC+L,GAAW,CAAC5Y,KAAMkH,EAAWgQ,QAbhB,CACd,CAAE3O,MAAO,KAAMiP,SAAU,KAAM2D,UAAU,GACzC,CAAE5S,MAAO,OAAQiP,SAAU,OAAQ2D,UAAU,GAC7C,CAAE5S,MAAO,QAASiP,SAAU,QAAS2D,UAAU,GAC/C,CAAE5S,MAAO,MAAOiP,SAAU,MAAO2D,UAAU,GAC3C,CAAE5S,MAAO,aAASiP,SAAU,QAAS2D,UAAU,GAC/C,CAAE5S,MAAO,QAASiP,SAAU,QAAS2D,UAAU,GAC/C,CAAE5S,MAAO,aAASiP,SAAU,QAAS2D,UAAU,GAC/C,CAAE5S,MAAO,kBAAmBiP,SAAU,aAAc2D,UAAU,GAC9D,CAAE5S,MAAO,oBAAqBiP,SAAU,aAAc2D,UAAU,GAChE,CAAE5S,MAAO,QAASiP,SAAU,QAAS2D,UAAU,IAGCzZ,UAAWA,EAAWC,UAAWA,EAAWkX,WA1B7E,SAACnX,EAAWC,GAC7BrB,QAAQC,IAAIoB,EAAWD,GACvBsH,EAAStB,GAAU,CAAEhG,YAAWC,gBAwBsF0V,UA9CnG,SAACzW,GACpB6V,MAAM,sDACNzN,EAASlC,GAAWsE,SAASxK,EAAKoE,OA4C6GoS,QAzC9H,SAACxW,GAClBoI,EAASzB,GAAgB6D,SAASxK,EAAKoE,MACvCyd,GAAiB,IAuCmJnL,WApChJ,SAAC1W,GACrBoI,EAAS9G,EAAwBkJ,SAASxK,EAAKoE,MAC/C2d,GAA0B,MAoC5B,OACE/V,IAAAC,cAAAD,IAAAE,SAAA,KACGwV,GAAoB1V,IAAAC,cAAC2O,GAAW,CAAC3U,KAAMQ,GAAsB,GAAIqB,KAAM4Z,EAAkB3Z,MA3DlE,WAC1B4Z,GAAgB,MA2DbC,GAAqB5V,IAAAC,cAACsP,GAAY,CAACtV,KAAMQ,GAAsB,GAAIqB,KAAM8Z,EAAmB7Z,MAzDpE,WAC3B8Z,GAAiB,MAyDdC,GAA0B9V,IAAAC,cAACyP,GAAsB,CAACC,aAAchb,GAA8C,GAAImH,KAAMga,EAAwB/Z,MAvD/G,WACpCga,GAA0B,MAuDxB/V,IAAAC,cAACmC,KAAM,CAACC,QAAQ,QAAQ9B,QAlEF,WACxBoV,GAAgB,KAiEsC3V,IAAAC,cAAC4T,KAAK,MAAG,0BAE7D7T,IAAAC,cAAC+H,IAAS,CAACjH,UAAU,OAEnBf,IAAAC,cAACS,KAAI,CAACC,SAAU,SAAChB,GAAQA,EAAEiK,mBACzB5J,IAAAC,cAACS,KAAKO,QAAO,CAACrQ,KAAK,SAASnG,MAAOmK,EAAQsM,YAAY,aAAaC,SA5CvD,SAACxB,GACpBA,EAAEiK,iBACFlW,QAAQC,IAAIgM,EAAEyB,OAAO3W,OACrB2R,EAASvB,GAAW8E,EAAEyB,OAAO3W,YA0CxBmpB,kBC9FT9pB,GAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAAzC,EAIO,SAAeisB,GAAWpiB,GAAA,OAAAqiB,GAAApiB,MAAAjH,KAAAkH,WAWhC,SAAAmiB,KAAA,OAAAA,GAAAnjB,YAAAhJ,KAAA+G,KAXM,SAAAkC,EAA2BmjB,GAAW,IAAAC,EAAAC,EAAA5U,EAAA,OAAA1X,KAAAyB,KAAA,SAAA0H,GAAA,cAAAA,EAAAvB,KAAAuB,EAAA7D,MAAA,OAOxC,OANK+mB,EAAU,IAAIE,QACdD,EAAM,UAAA9e,OAAa4e,GACzBC,EAAQG,OAAO,gBAAiBF,GAC1B5U,EAAU,CACZpU,OAAQ,MACR+oB,QAASA,GACZljB,EAAArE,OAAA,SACM2nB,MAAM5P,GAAYC,gBAAiBpF,GACrCxT,KAAK,SAAAgF,GAAQ,OAAIA,EAASwjB,SAC1B/jB,MAAM,SAAAvE,GAAK,OAAIwF,QAAQC,IAAIzF,MAAO,wBAAA+E,EAAApB,SAAAkB,OAC1Cc,MAAAjH,KAAAkH,WCTc,SAAS2iB,KAAoB,IAAAC,EACTna,eAAvBwK,EAAQ2P,EAAR3P,SAAUzK,EAAQoa,EAARpa,SAAQE,EACQC,mBAAS,MAAK+F,EAAA5F,YAAAJ,EAAA,GAAzC2M,EAAS3G,EAAA,GAAEmU,EAAYnU,EAAA,GAuB9B,OArBArD,oBAAU,YAGV,WACI,IAAMyX,EAAOnf,YAAA,GACNgP,GAAY,CACfuD,QAAS1N,EAAS,KAItByK,EAAS8P,mBAAmBD,GAAS5oB,KAAK,SAACgF,GACvCgjB,GAAYhjB,EAASkjB,aAAaloB,KAAK,SAAAgF,GAAQ,OAAI2jB,EAAa3jB,OACjEP,MAAM,SAACkN,GACNoH,EAAS+P,kBAAkBF,GAAS5oB,KAAK,SAACgF,GACtCgjB,GAAYhjB,EAASkjB,aAAaloB,KAAK,SAAAgF,GAAQ,OAAI2jB,EAAa3jB,SAbxE+jB,IACD,IAoBC/W,IAAAC,cAAC+H,IAAS,KACLmB,GAAanJ,IAAAC,cAAC8I,GAAW,CAACI,UAAWA,KCCnC6N,OA1Bf,WACE,OACEhX,IAAAC,cAAC+H,IAAS,KACRhI,IAAAC,cAACI,GAAM,MACPL,IAAAC,cAACgX,KAAuB,KACtBjX,IAAAC,cAACmF,GAAc,OAEjBpF,IAAAC,cAACiX,KAAqB,KACpBlX,IAAAC,cAACkX,IAAa,KACZnX,IAAAC,cAACmX,IAAM,KACLpX,IAAAC,cAACoX,IAAK,CAACC,KAAK,IAAIC,QAASvX,IAAAC,cAACkU,GAAU,QACpCnU,IAAAC,cAACoX,IAAK,CAACC,KAAK,QAAQC,QAASvX,IAAAC,cAACwU,GAAU,QACxCzU,IAAAC,cAACoX,IAAK,CAACC,KAAK,SAASC,QAASvX,IAAAC,cAACwJ,GAAK,QACpCzJ,IAAAC,cAACoX,IAAK,CAACC,KAAK,UAAUC,QAASvX,IAAAC,cAAC6J,GAAM,QACtC9J,IAAAC,cAACoX,IAAK,CAACC,KAAK,aAAaC,QAASvX,IAAAC,cAACqS,GAAe,QAClDtS,IAAAC,cAACoX,IAAK,CAACC,KAAK,eAAeC,QAASvX,IAAAC,cAACwW,GAAiB,QACtDzW,IAAAC,cAACoX,IAAK,CAACC,KAAK,SAASC,QAASvX,IAAAC,cAACwV,GAAW,aCbvC+B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAhY,EAAA,GAAA3R,KAAA2pB,EAAAC,KAAA,WAAqB5pB,KAAK,SAAAuF,GAAiD,IAA9CskB,EAAMtkB,EAANskB,OAAQC,EAAMvkB,EAANukB,OAAQC,EAAMxkB,EAANwkB,OAAQC,EAAMzkB,EAANykB,OAAQC,EAAO1kB,EAAP0kB,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCGRS,GAAe,WAAIC,G3BVC,CACxBC,KAAM,CACJC,SAAU,uCACVC,UAAW,yEACXC,YAAa,+BACbC,iBAAkB,CAAC,+F2BMVC,IAASC,WAAWC,SAASC,eAAe,SAEpDzV,OAEHnD,IAAAC,cAACD,IAAM6Y,WAAU,KACf7Y,IAAAC,cAAC6Y,KAAY,CAAC/R,SAAUmR,IACtBlY,IAAAC,cAAC8Y,IAAQ,CAACxd,MAAOA,IACfyE,IAAAC,cAAC+W,GAAG,UASZQ","file":"static/js/main.9dfae172.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst fetchComputers=createAsyncThunk('fetchComputers',async ()=>{\r\n    const response = await axios.get(\"https://192.168.60.112/it_hardware_system/api.php/computers\");\r\n\r\n    return response.data.computers;\r\n    \r\n})\r\n\r\nexport {fetchComputers}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst addComputer=createAsyncThunk('addComputer',async (computer)=>{\r\n    const response = await axios.post(\"https://192.168.60.112/it_hardware_system/api.php/addcomputer\",computer);\r\n    console.log(response.data)\r\n    return response.data.computer;\r\n})\r\nexport {addComputer}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst deleteComputer=createAsyncThunk('deleteComputer',async (item)=>{\r\n    await axios.post(\"https://192.168.60.112/it_hardware_system/api.php/deletecomputer\",item);\r\n    return item;\r\n})\r\nexport {deleteComputer}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst updateComputer=createAsyncThunk('updateComputer',async (computer)=>{\r\n    const response = await axios.post(\"https://192.168.60.112/it_hardware_system/api.php/updatecomputer/\",computer);\r\n    console.log(response.data)\r\n    \r\n    return response.data.computer;\r\n})\r\nexport {updateComputer}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchComputers} from \"../thunks/fetchComputers\";\r\nimport { addComputer} from \"../thunks/addComputer\";\r\nimport { deleteComputer} from \"../thunks/deleteComputer\";\r\nimport { updateComputer} from \"../thunks/updateComputer\";\r\n\r\nconst InitailDataComputersCount=localStorage.getItem('dataComputersCount') \r\n      ? localStorage.getItem('dataComputersCount')\r\n      : '' \r\n\r\nconst computersSlice=createSlice({\r\n    name:'computers',\r\n    initialState:{\r\n        isLoading:true,\r\n        error:null,\r\n        dataComputers:[],\r\n        dataComputersCount:InitailDataComputersCount,\r\n        dataComputerByUserId:[],\r\n        search:\"\",\r\n        dataComputerById:null,\r\n        sortField:\"id\",\r\n        sortOrder:\"asc\",\r\n        showToast:false,\r\n        msgToast:\"\",\r\n      \r\n    },\r\n    reducers:{\r\n      closeToast(state,action){\r\n        state.showToast=false;\r\n      },\r\n      getDataComputersCount(state,action){\r\n        state.dataComputersCount=state.dataComputers.length\r\n      },\r\n      getDataComputerByUserId(state,action){\r\n        state.dataComputerByUserId=state.dataComputers.find(computer => computer.user_id === action.payload)\r\n      },\r\n      getDataComputerById(state,action){\r\n        state.dataComputerById=state.dataComputers.find(computer => computer.computer_id === action.payload)\r\n      },\r\n      searchComputer(state,action){\r\n        state.search=action.payload\r\n      },\r\n      sortComputers(state,action){\r\n        state.sortField=action.payload.sortField;\r\n        state.sortOrder=action.payload.sortOrder;\r\n        if(action.payload.sortField){\r\n            const sorted=[...state.dataComputers].sort((a,b)=>{\r\n                if(a[action.payload.sortField]===null) return 1;\r\n                if(b[action.payload.sortField]===null) return -1;\r\n                if(b[action.payload.sortField]===null && a[action.payload.sortField]===null) return 0;\r\n\r\n                return a[action.payload.sortField].toString().localeCompare(b[action.payload.sortField].toString(),{numeric:true})*(action.payload.sortOrder===\"asc\"?1:-1)\r\n            })\r\n            state.dataComputers=sorted;\r\n        }\r\n      }\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n          .addCase(fetchComputers.pending, (state, action) => {\r\n            state.isLoading = true;\r\n          })\r\n          .addCase(fetchComputers.fulfilled, (state, action) => {\r\n            if(action.payload===[]){\r\n              return state;\r\n            }else{\r\n            if(state.search===\"\"){\r\n              state.dataComputers=action.payload;\r\n            }else{\r\n              state.dataComputers=action.payload;\r\n              state.dataComputers=state.dataComputers.filter(\r\n                (c)=>{return c.computerName.toLowerCase().includes(state.search.toLowerCase()) ||c.sn.toLowerCase().includes(state.search.toLowerCase())  }\r\n                \r\n                );\r\n            }\r\n            state.isLoading = false;\r\n            state.dataComputersCount=action.payload.length;\r\n            localStorage.setItem('dataComputersCount',JSON.stringify(state.dataComputersCount));\r\n          }\r\n          })\r\n          .addCase(fetchComputers.rejected, (state, action) => {\r\n            state.isLoading=true;\r\n            state.error = action.error.message;\r\n          })\r\n          .addCase(addComputer.pending, (state, action) => {\r\n            state.isLoading = true;\r\n          })\r\n          .addCase(addComputer.fulfilled, (state, action) => {\r\n            if(action.payload.length===0){\r\n              state.showToast=true;\r\n              state.msgToast=`Kmputer nie został dodany - ponieważ nie wypełniłeś wszystkich pól !`;\r\n              return state;\r\n            }else{\r\n            state.showToast=true;\r\n            state.msgToast=`Dodałeś komputer ${action.payload.computerName}`;  \r\n            state.isLoading = false;\r\n            console.log(action.payload);\r\n            state.dataComputers.push(action.payload);\r\n            state.dataComputersCount=state.dataComputers.length;\r\n            localStorage.setItem('dataComputersCount',JSON.stringify(state.dataComputersCount));\r\n          }\r\n          })\r\n          .addCase(addComputer.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n          .addCase(deleteComputer.pending, (state, action) => {\r\n            state.isLoading = true\r\n          })\r\n          .addCase(deleteComputer.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n          \r\n            state.showToast=true;\r\n            state.msgToast=`Usunołeś komputer ${action.payload.computerName}`;\r\n            state.dataComputers=state.dataComputers.filter((computer)=>{\r\n              return computer.computer_id!==action.payload.computer_id\r\n            })\r\n          \r\n            state.dataComputersCount=state.dataComputers.length\r\n            localStorage.setItem('dataComputersCount',JSON.stringify(state.dataComputersCount))\r\n            \r\n          })\r\n          .addCase(deleteComputer.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n          .addCase(updateComputer.pending, (state, action) => {\r\n            state.isLoading = true\r\n          })\r\n          .addCase(updateComputer.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            console.log(action.payload)\r\n            const index = state.dataComputers.findIndex(computer => computer.computer_id === action.payload.computer_id)\r\n            if (index !== -1){\r\n              state.showToast=true;\r\n              state.msgToast=`Zaktualizowałes komputer ${action.payload.computerName}`;\r\n              state.dataComputers[index] = {\r\n                ...state.dataComputers[index],\r\n                ...action.payload,\r\n              };\r\n            }\r\n            \r\n          }\r\n            \r\n          )\r\n          .addCase(updateComputer.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n      }\r\n\r\n})\r\nexport const selectAllComputers=state=>state.computers.dataComputers;\r\nexport const {getDataComputersCount,getDataComputerByUserId,searchComputer,getDataComputerById,sortComputers,closeToast} = computersSlice.actions;\r\nexport const computersReducer =computersSlice.reducer;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst fetchSystems=createAsyncThunk('fetchSystems',async ()=>{\r\n    const response = await axios.get(\"https://192.168.60.112/it_hardware_system/api.php/systems\");\r\n    return response.data.systems;\r\n})\r\nexport {fetchSystems}","import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { fetchSystems } from \"../thunks/fetchSystems\";\r\nconst systemsSlice=createSlice({\r\n    name:'systems',\r\n    initialState:{\r\n        isLoading:false,\r\n        error:null,\r\n        dataSystems:[],\r\n        firstDataSystem:1\r\n    },\r\n    reducers:{\r\n        getFirstDataSystem(state,action){\r\n          state.firstDataSystem=state.dataSystems[0].id\r\n        }\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n          .addCase(fetchSystems.pending, (state, action) => {\r\n            state.isLoading = true\r\n          })\r\n          .addCase(fetchSystems.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            state.dataSystems=action.payload;\r\n            state.firstDataSystem=action.payload[0].id;\r\n            \r\n          })\r\n          .addCase(fetchSystems.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n      }\r\n})\r\nexport const systemsReducer=systemsSlice.reducer;\r\nexport const {getSystems,getFirstDataSystem} = systemsSlice.actions;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst fetchLogs=createAsyncThunk('fetchLogss',async ()=>{\r\n    const response = await axios.get(\"https://192.168.60.112/it_hardware_system/api.php/logs\");\r\n    return response.data.logs;\r\n    \r\n})\r\n\r\nexport {fetchLogs}","import { createSlice,current } from \"@reduxjs/toolkit\"\r\nimport { fetchLogs } from \"../thunks/fetchLogs\";\r\nconst initialFilters={tabela:'',nazwa:'',akcja:'',kto:''};\r\nconst logsSlice=createSlice({\r\n    name:'logs',\r\n    initialState:{\r\n        isLoading:false,\r\n        error:null,\r\n        dataLogs:[],\r\n        filteredData:[],\r\n        filters:initialFilters,\r\n        sortField:\"\",\r\n        sortOrder:\"asc\",\r\n        sliceData:[]\r\n    },\r\n    reducers:{\r\n    filterRun(state,action){\r\n        state.filters=action.payload\r\n    },\r\n    filtersClear(state,action){\r\n      state.filters=initialFilters;\r\n    },\r\n    setPaginateSlice(state,action){\r\n      state.sliceData=action.payload;\r\n    },\r\n    sortLogs(state,action){\r\n      state.sortField=action.payload.sortField;\r\n      state.sortOrder=action.payload.sortOrder;\r\n      if(action.payload.sortField){\r\n          const sorted=[...state.filteredData].sort((a,b)=>{\r\n              if(a[action.payload.sortField]===null) return 1;\r\n              if(b[action.payload.sortField]===null) return -1;\r\n              if(b[action.payload.sortField]===null && a[action.payload.sortField]===null) return 0;\r\n\r\n              return a[action.payload.sortField].toString().localeCompare(b[action.payload.sortField].toString(),{numeric:true})*(action.payload.sortOrder===\"asc\"?1:-1)\r\n          })\r\n          state.filteredData=sorted;\r\n     \r\n          \r\n      }\r\n    }\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n          .addCase(fetchLogs.pending, (state, action) => {\r\n            state.isLoading = true\r\n          })\r\n          .addCase(fetchLogs.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            state.dataLogs=action.payload;\r\n            const {tabela,akcja,nazwa,kto}=state.filters;\r\n            console.log(current(state.filters))\r\n            state.filteredData=action.payload;\r\n            if(tabela!==''){\r\n              state.filteredData=state.filteredData.filter(\r\n                data=>data.tabela.includes(tabela)\r\n            )\r\n            }\r\n            if(akcja!==''){\r\n              state.filteredData=state.filteredData.filter(\r\n                  data=>data.akcja.includes(akcja)\r\n              )\r\n              }\r\n            if(nazwa!==''){\r\n              state.filteredData=state.filteredData.filter(\r\n                data=>data.co.includes(nazwa))\r\n            }\r\n            if(kto!==''){\r\n              state.filteredData=state.filteredData.filter(\r\n                data=>data.kto.includes(kto)\r\n            )\r\n         \r\n            \r\n              }})\r\n          .addCase(fetchLogs.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n      }\r\n})\r\nexport const logsReducer=logsSlice.reducer;\r\nexport const {getLogs,filterRun,filtersClear,sortLogs,setPaginateSlice} = logsSlice.actions;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst fetchUsers=createAsyncThunk('fetchUsers',async ()=>{\r\n    const response = await axios.get(\"https://192.168.60.112/it_hardware_system/api.php/users/\");\r\n    return response.data.users;\r\n})\r\nexport {fetchUsers}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst addUser=createAsyncThunk('addUser',async (user)=>{\r\n    const response = await axios.post(\"https://192.168.60.112/it_hardware_system/api.php/adduser\",user);\r\n    console.log(response.data.user)\r\n    return response.data.user;\r\n})\r\nexport {addUser}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst deleteUser=createAsyncThunk('deleteUser',async (id)=>{\r\n    await axios.post(\"https://192.168.60.112/it_hardware_system/api.php/deleteuser\",{id});\r\n    return id;\r\n})\r\nexport {deleteUser}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nconst updateUser=createAsyncThunk('updateUser',async (user)=>{\r\n    const response = await axios.post(\"https://192.168.60.112/it_hardware_system/api.php/updateuser/\",user);\r\n    return response.data.user;\r\n})\r\nexport {updateUser}","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchUsers } from \"../thunks/fetchUsers\";\r\nimport { addUser} from \"../thunks/addUser\";\r\nimport { deleteUser} from \"../thunks/deleteUser\";\r\nimport { updateUser} from \"../thunks/updateUser\";\r\n\r\nconst InitailDataUsersCount=localStorage.getItem('dataUsersCount') \r\n      ? localStorage.getItem('dataUsersCount')\r\n      : '' \r\nconst usersSlice=createSlice({\r\n    name:'users',\r\n    initialState:{\r\n        isLoading:true,\r\n        error:null,\r\n        dataUsers:[],\r\n        firstDataUser:1,\r\n        dataUsersCount:InitailDataUsersCount,\r\n        dataUser:[],\r\n        search:\"\",\r\n        sortField:\"\",\r\n        sortOrder:\"asc\",\r\n        rowsPerPage:10\r\n    },\r\n    reducers:{\r\n        getDataUserById(state,action){\r\n            state.dataUser=state.dataUsers.find(user => user.id === action.payload)\r\n        },\r\n        setRowsPerPage(state,action){\r\n          state.rowsPerPage=action.payload;\r\n        },\r\n        searchUser(state,action){\r\n            state.search=action.payload\r\n        },\r\n        sortUsers(state,action){\r\n          state.sortField=action.payload.sortField;\r\n          state.sortOrder=action.payload.sortOrder;\r\n          if(action.payload.sortField){\r\n              const sorted=[...state.dataUsers].sort((a,b)=>{\r\n                  if(a[action.payload.sortField]===null) return 1;\r\n                  if(b[action.payload.sortField]===null) return -1;\r\n                  if(b[action.payload.sortField]===null && a[action.payload.sortField]===null) return 0;\r\n  \r\n                  return a[action.payload.sortField].toString().localeCompare(b[action.payload.sortField].toString(),{numeric:true})*(action.payload.sortOrder===\"asc\"?1:-1)\r\n              })\r\n              state.dataUsers=sorted;\r\n          }\r\n        }\r\n    },\r\n    extraReducers(builder){\r\n        builder.addCase(fetchUsers.fulfilled,(state,action)=>{\r\n                if(state.search===\"\"){\r\n                state.dataUsers=action.payload;\r\n              \r\n                }\r\n                else{\r\n               \r\n                state.dataUsers=action.payload;\r\n                state.dataUsers=state.dataUsers.filter(\r\n                  u=>u.name.toLowerCase().includes(state.search.toLowerCase())||\r\n                  u.surname.toLowerCase().includes(state.search.toLowerCase())\r\n                  )\r\n                }\r\n                state.firstDataUser=action.payload[0].id;\r\n                state.dataUsersCount=action.payload.length;\r\n                state.isLoading=false;\r\n                localStorage.setItem('dataUsersCount',JSON.stringify(state.dataUsersCount));\r\n              \r\n         \r\n        })\r\n        .addCase(addUser.pending, (state, action) => {\r\n            state.isLoading = true\r\n          })\r\n          .addCase(addUser.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            state.dataUsers.push(action.payload);\r\n            state.dataUsersCount=state.dataUsers.length\r\n            localStorage.setItem('dataUsersCount',JSON.stringify(state.dataUsersCount))\r\n            \r\n          })\r\n          .addCase(addUser.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n          .addCase(deleteUser.pending, (state, action) => {\r\n            state.isLoading = true\r\n          })\r\n          .addCase(deleteUser.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            state.dataUsers=state.dataUsers.filter((user)=>{\r\n              return user.id!==action.payload\r\n            })\r\n            state.dataUsersCount=state.dataUsers.length\r\n            localStorage.setItem('dataUsersCount',JSON.stringify(state.dataUsersCount))\r\n            \r\n          })\r\n          .addCase(deleteUser.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n          .addCase(updateUser.pending, (state, action) => {\r\n            state.isLoading = true\r\n          })\r\n          .addCase(updateUser.fulfilled, (state, action) => {\r\n            state.isLoading = false\r\n            const index = state.dataUsers.findIndex(user => user.id === action.payload.id)\r\n            if (index !== -1){\r\n              state.dataUsers[index] = {\r\n                ...state.dataUsers[index],\r\n                ...action.payload,\r\n              };\r\n            }\r\n            \r\n           \r\n            \r\n          }\r\n            \r\n          )\r\n          .addCase(updateUser.rejected, (state, action) => {\r\n            state.isLoading=true\r\n            state.error = action.error.message\r\n          })\r\n          \r\n    }\r\n})\r\nexport const usersReducer = usersSlice.reducer;\r\nexport const {getUsers,getDataUserById,searchUser,sortUsers,setRowsPerPage}=usersSlice.actions;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst customTableSlice = createSlice({\r\n    name: 'customTable',\r\n    initialState: {\r\n        rowsPerPage: 10\r\n    },\r\n    reducers: {\r\n        setTableRowsPerPage(state, action) {\r\n            state.rowsPerPage = action.payload;\r\n        }\r\n    }\r\n})\r\nexport const {setTableRowsPerPage} = customTableSlice.actions;\r\nexport const customTableReducer =customTableSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { computersReducer, getDataComputersCount, getDataComputerByUserId, selectAllComputers, searchComputer, getDataComputerById, sortComputers, closeToast } from './slices/computersSlice';\r\nimport { systemsReducer, getFirstDataSystem } from './slices/systemsSlice';\r\nimport { logsReducer, filterRun, filtersClear, sortLogs, setPaginateSlice } from './slices/logsSlice';\r\nimport { usersReducer, getDataUserById, searchUser, sortUsers } from './slices/usersSlice';\r\nimport { customTableReducer, setTableRowsPerPage } from './slices/customTableSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    computers: computersReducer,\r\n    systems: systemsReducer,\r\n    users: usersReducer,\r\n    logs: logsReducer,\r\n    customTable: customTableReducer\r\n  }\r\n})\r\n\r\nexport default store;\r\nexport * from './thunks/fetchComputers'\r\nexport * from './thunks/fetchSystems'\r\nexport * from './thunks/fetchUsers'\r\nexport * from './thunks/addUser'\r\nexport * from './thunks/deleteUser'\r\nexport * from './thunks/updateUser'\r\nexport * from './thunks/addComputer'\r\nexport * from './thunks/deleteComputer'\r\nexport * from './thunks/updateComputer'\r\nexport * from './thunks/fetchLogs'\r\nexport {\r\n  getDataComputersCount, getFirstDataSystem, getDataComputerByUserId, closeToast,\r\n  selectAllComputers, getDataUserById, searchUser, searchComputer, getDataComputerById, sortComputers, filterRun, filtersClear, sortUsers, sortLogs, setPaginateSlice,setTableRowsPerPage\r\n};\r\n","export const aplikacjeOptions = [\r\n    { value: \"sap\", label: \"sap\" },\r\n    { value: \"vnc\", label: \"vnc\" },\r\n    { value: \"7zip\", label: \"7zip\" },\r\n    { value: \"bitLocker\", label: \"BitLocker\" },\r\n    { value: \"office2013\", label: \"Office 2013 H&B\" },\r\n    { value: \"office365\", label: \"O365\" },\r\n    { value: \"adobe\", label: \"Adobe Reader\" }\r\n];\r\nexport const ComputersTypesOptions = [\r\n    { value: \"laptop\", label: \"Laptop\" },\r\n    { value: \"pc\", label: \"PC\" },\r\n    { value: \"terminal\", label: \"Terminal\" },\r\n    { value: \"tablet\", label: \"Tablet\" },\r\n    { value: \"allinone\", label: \"All in One\" },\r\n    { value: \"ultrabook\", label: \"Ultrabook\" }\r\n];","import { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchSystems, fetchUsers } from '../store';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, Modal, Button, Alert,Row,Col } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { aplikacjeOptions,ComputersTypesOptions } from '../Lists';\r\nfunction ComputerFormAdd({ show, close, handleAddSubmit }) {\r\n  const { dataSystems, firstDataSystem } = useSelector((state) => { return state.systems })\r\n  const { dataUsers, firstDataUser } = useSelector((state) => { return state.users })\r\n\r\n  const dispatch = useDispatch();\r\n  const { accounts } = useMsal()\r\n  const [owner] = useState(accounts[0].username);\r\n  const [errors, setErrors] = useState({ \"computerName\": \"\", \"sn\": \"\", \"typ\": \"\", \"model\": \"\" });\r\n  const [computerName, setComputerName] = useState('');\r\n  const [sn, setSn] = useState('');\r\n  const [typ, setTyp] = useState('');\r\n  const [model, setModel] = useState('');\r\n  const [ram, setRam] = useState(\"\");\r\n  const [wartosc, setWartosc] = useState(\"\");\r\n  const [system_id, setSystem_id] = useState(parseInt(firstDataSystem));\r\n  const [user_id, setUser_id] = useState(parseInt(firstDataUser));\r\n  \r\n  \r\n  const [aplications, setAplications] = useState([aplikacjeOptions[0], aplikacjeOptions[2]]);\r\n  useEffect(() => {\r\n    dispatch(fetchSystems())\r\n    dispatch(fetchUsers())\r\n  }, [dispatch, firstDataSystem, firstDataUser])\r\n\r\n\r\n  const checkLenghInput = (min, max, input,valueToCheck) => {\r\n    if (valueToCheck.length > max) {\r\n      const message = `Liczba znaków nie może przekroczyć ${max}`;\r\n      setErrors((values) => ({ ...values, [input]: message }));\r\n      return true;\r\n    } else if (valueToCheck.length < min) {\r\n      const message = `Liczba znaków nie może być mniejsza niż ${min}`;\r\n      setErrors((values) => ({ ...values, [input]: message }));\r\n      return true;\r\n    }\r\n    else {\r\n      setErrors({});\r\n      return false;\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    if (!checkLenghInput(1, 15,\"computerName\",computerName) && !checkLenghInput(1, 15, \"sn\",sn))\r\n    {\r\n      const computer = { computerName, sn, typ, model, ram: parseInt(ram), wartosc: parseInt(wartosc), system_id, user_id, owner,aplications };\r\n      console.log(computer)\r\n      handleAddSubmit(computer);\r\n      close()\r\n    }else{\r\n      console.log(errors)\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  let opsSystems = dataSystems.map((s) => { return { value: s.id, label: s.name } })\r\n  let opsUsers = dataUsers.map((s) => { return { value: s.id, label: s.name + \" \" + s.surname } })\r\n\r\n  return (\r\n    <>\r\n\r\n      <Modal show={show} size='lg'>\r\n        <Modal.Header closeButton onClick={close}>\r\n          <Modal.Title>Dodaj Sprzęt</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n \r\n         \r\n          <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n          <Col>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control type=\"text\" placeholder=\"Nazwa\"\r\n                name=\"computerName\"\r\n                onChange={(e) => setComputerName(e.target.value)}\r\n                value={computerName}\r\n                autoFocus\r\n              />\r\n            </Form.Group>\r\n            {errors.computerName && <Alert>{errors.computerName}</Alert>}\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control type=\"text\" placeholder=\"SN\"\r\n                name=\"sn\"\r\n                onChange={(e) => setSn(e.target.value)}\r\n                value={sn}\r\n              />\r\n            </Form.Group>\r\n            {errors.sn && <Alert>{errors.sn}</Alert>}\r\n          \r\n            <Form.Group className=\"mb-3\" controlId=\"typ\">\r\n              <Select options={ComputersTypesOptions} placeholder=\"Typ\" defaultValue={typ} isSearchable={true} onChange={(e) => { setTyp(e.value) }} />\r\n            </Form.Group>\r\n            {errors.typError && <Alert>{errors.typError}</Alert>}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control type=\"text\" placeholder=\"Model\"\r\n                name=\"model\"\r\n                onChange={(e) => setModel(e.target.value)}\r\n                value={model}\r\n              />\r\n            </Form.Group>\r\n            {errors.modelError && <Alert>{errors.modelError}</Alert>}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control type=\"number\" placeholder=\"Ram\"\r\n                name=\"ram\"\r\n                onChange={(e) => setRam(e.target.value)}\r\n                value={ram}\r\n                minLength={1}\r\n                maxLength={3}\r\n              />\r\n            \r\n            </Form.Group>\r\n            </Col>\r\n              <Col>\r\n            {errors.ramError && <Alert>{errors.ramError}</Alert>}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control type=\"number\" placeholder=\"Wartość\"\r\n                name=\"wartosc\"\r\n                onChange={(e) => setWartosc(e.target.value)}\r\n                value={wartosc}\r\n                minLength={3}\r\n                maxLength={9}\r\n              />\r\n            </Form.Group>\r\n            {errors.wartoscError && <Alert>{errors.wartoscError}</Alert>}\r\n            <Form.Group className=\"mb-3\" controlId=\"system\">\r\n              <Select options={opsSystems} placeholder=\"System\" defaultValue={system_id} isSearchable={true} onChange={(e) => { setSystem_id(e.value) }} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"uzytkownik\">\r\n              <Select options={opsUsers} placeholder=\"Użytkownik\" defaultValue={user_id} isSearchable={true} onChange={e => setUser_id(e.value)} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"aplikcaje\">\r\n              <Select isMulti options={aplikacjeOptions} placeholder=\"aplikacje\" defaultValue={[aplikacjeOptions[0], aplikacjeOptions[2]]} isSearchable={true} onChange={(e) => {setAplications(v => e); console.log(e)}} />\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          \r\n          </Form>\r\n          \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={close}>\r\n            Zamknij\r\n          </Button>\r\n          <Button type='submit' variant=\"light\" onClick={handleSubmit}>\r\n            Dodaj\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComputerFormAdd;","import {useState,useCallback} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nfunction useThunk(thunk){\r\n    const [isLoading,setIsLoading]=useState(false);\r\n    const [isError,setIsError]=useState(null);\r\n    const dispatch=useDispatch();\r\n    const runThunk= useCallback( \r\n        (arg)=>{\r\n        setIsLoading(true);\r\n        dispatch(thunk(arg))\r\n        .unwrap()\r\n        .catch((error)=>setIsError(error))\r\n        .finally(()=>setTimeout(()=>{setIsLoading(false)},700));\r\n    },\r\n    [dispatch,thunk]\r\n    );\r\n    return [runThunk,isLoading,isError];\r\n}\r\nexport default useThunk;","import Placeholder from 'react-bootstrap/Placeholder';\r\nimport React from 'react';\r\nfunction PlaceAnimation({times}) {\r\n\r\nconst rows=times>0?times:times=1;\r\nconst render=Array(rows).fill(rows).map((u,i)=>{return <Placeholder key={i} as=\"p\" animation=\"glow\">\r\n<Placeholder xs={12} />\r\n</Placeholder>})\r\n  return (\r\n    <>\r\n    {render}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlaceAnimation;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchSystems, fetchUsers } from '../store'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, Modal, Button, Alert, Col, Row } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport useThunk from '../Hooks/useThunk';\r\nimport PlaceAnimation from './PlaceAnimation';\r\nimport { aplikacjeOptions } from '../Lists';\r\nfunction ComputerFormEdit({ show, close, computer, handleEditSubmit }) {\r\n  const { accounts } = useMsal()\r\n  const [updater] = useState(accounts[0].username);\r\n  const [doFetchSystems, isLoadingSystems, isErrorSystems] = useThunk(fetchSystems);\r\n  const [doFetchUsers, isLoadingUsers, isErrorUsers] = useThunk(fetchUsers);\r\n  const { dataSystems } = useSelector((state) => { return state.systems })\r\n  const { dataUsers } = useSelector((state) => { return state.users })\r\n  const dataComputerById = useSelector(state => state.computers.dataComputers.find(c => c.computer_id === computer.computer_id))\r\n  const [computerNameError, setComputerNameError] = useState(\"\");\r\n  const [computerName, setComputerName] = useState(dataComputerById.computerName);\r\n  const [typ, setTyp] = useState(dataComputerById.typ);\r\n  const [model, setModel] = useState(dataComputerById.model);\r\n  const [ram, setRam] = useState(dataComputerById.ram);\r\n  const [wartosc, setWartosc] = useState(dataComputerById.wartosc);\r\n  const [sn, setSn] = useState(dataComputerById.sn);\r\n  const [system_id, setSystem_id] = useState(dataComputerById.system_id);\r\n  const [user_id, setUser_id] = useState(parseInt(dataComputerById.user_id));\r\n  const [aplications, setAplications] = useState(JSON.parse(dataComputerById.aplications));\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    doFetchSystems();\r\n    doFetchUsers();\r\n\r\n  }, [dispatch])\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(aplications)\r\n    const computerNamePattern = /^(?=.*[a-zA-Z])/;\r\n    if (!computerNamePattern.test(computerName)) {\r\n      setComputerNameError(\"Pole musi zawierać conajmniej 1 literę\");\r\n\r\n      return;\r\n    }\r\n    const computerToUpdate = { computerName, sn, typ, model, ram: parseInt(ram), wartosc: parseInt(wartosc), system_id, user_id, updater, computer_id: parseInt(dataComputerById.computer_id), aplications };\r\n    handleEditSubmit(computerToUpdate);\r\n    close();\r\n  }\r\n  let firstSystem = [], opsSystems, contentSystems;\r\n  if (isLoadingSystems) {\r\n    contentSystems = <PlaceAnimation times={1} />\r\n  } else if (isErrorSystems) {\r\n    contentSystems = \"error...\";\r\n  } else {\r\n    opsSystems = dataSystems.map((s) => { return { value: s.id, label: s.name } })\r\n    firstSystem = opsSystems.filter(s => s.value === parseInt(dataComputerById.system_id));\r\n    contentSystems = <Form.Group className=\"mb-3\" controlId=\"2\">\r\n      <Form.Label>System</Form.Label>\r\n      <Select options={opsSystems} defaultValue={firstSystem[0]} isSearchable={true} onChange={(e) => { setSystem_id(e.value) }} />\r\n    </Form.Group>\r\n  }\r\n  let firstUser = [], opsUsers, contentUsers;\r\n  if (isLoadingUsers) {\r\n    contentUsers = <PlaceAnimation times={1} />\r\n  } else if (isErrorUsers) {\r\n    contentUsers = \"error...\";\r\n  } else {\r\n    opsUsers = dataUsers.map((s) => { return { value: s.id, label: s.name + \" \" + s.rcp } })\r\n    firstUser = opsUsers.filter(s => s.value === dataComputerById.user_id);\r\n    contentUsers = <Form.Group className=\"mb-3\" controlId=\"2\">\r\n      <Form.Label>Użytkownik</Form.Label>\r\n      <Select options={opsUsers} defaultValue={firstUser[0]} isSearchable={true} onChange={(e) => { setUser_id(e.value) }} />\r\n    </Form.Group>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered>\r\n        <Modal.Header closeButton onClick={close}>\r\n          <Modal.Title>Edytuj</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\" >\r\n                  <Form.Label>Nazwa</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nazwa\"\r\n                    name=\"computerName\"\r\n                    value={computerName || ''}\r\n                    onChange={(e) => setComputerName(e.target.value)}\r\n                    autoFocus\r\n                  />\r\n                  {computerNameError && <Alert>{computerNameError}</Alert>}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" >\r\n                  <Form.Label>Serial Number</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Serial Number\"\r\n                    name=\"sn\"\r\n                    value={sn || ''}\r\n                    onChange={(e) => setSn(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Typ</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"Typ\"\r\n                    name=\"typ\"\r\n                    onChange={(e) => setTyp(e.target.value)}\r\n                    value={typ || ''}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Model</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"Model\"\r\n                    name=\"model\"\r\n                    onChange={(e) => setModel(e.target.value)}\r\n                    value={model || ''}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Ram</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"Ram\"\r\n                    name=\"ram\"\r\n                    onChange={(e) => setRam(e.target.value)}\r\n                    value={ram || ''}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Wartość</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"Wartość\"\r\n                    name=\"wartosc\"\r\n                    onChange={(e) => setWartosc(e.target.value)}\r\n                    value={wartosc || ''}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Label>Aplikacje</Form.Label>\r\n                <Form.Group className=\"mb-3\" controlId=\"3\">\r\n                  <Select isMulti options={aplikacjeOptions} placeholder=\"aplikacje\" defaultValue={aplications} isSearchable={true} onChange={(e) => { setAplications(v => e); console.log(e) }} />\r\n                </Form.Group>\r\n\r\n                {contentSystems}\r\n                {contentUsers}\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={close}>\r\n            Zamknij\r\n          </Button>\r\n          <Button type='submit' variant=\"light\" onClick={handleSubmit}>\r\n            Zapisz          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComputerFormEdit;","import React, { useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nexport default function CustomCarousel() {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <Carousel activeIndex={index} onSelect={handleSelect}>\r\n      <Carousel.Item>\r\n      <h1>Computers</h1>\r\n        <Carousel.Caption>\r\n          <h3>First slide label</h3>\r\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n      <h1>Zestawy komputerowe</h1>\r\n\r\n        <Carousel.Caption>\r\n          <h3>Second slide label</h3>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n      <h1>Users</h1>\r\n\r\n        <Carousel.Caption>\r\n          <h3>Third slide label</h3>\r\n          <p>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Button, Toast } from 'react-bootstrap';\r\n\r\nexport default function CustomToast({ showToast, msg, closeToast }) {\r\n\r\n  return (\r\n    <div\r\n      aria-live=\"polite\"\r\n      aria-atomic=\"true\"\r\n      style={{\r\n        left: '0px',\r\n        position: 'absolute',\r\n        minHeight: '100px',\r\n      }}\r\n    >\r\n      <Toast\r\n        autohide\r\n        show={showToast}\r\n        delay={2200}\r\n        style={{\r\n          position: 'fixed',\r\n          top: '2%',\r\n          right: '2%',\r\n        }}\r\n      >\r\n        <Toast.Body>{msg}   <Button variant='light' size='sm' onClick={closeToast}>Zamknij</Button></Toast.Body>\r\n      </Toast>\r\n    </div>\r\n\r\n  )\r\n}","export const msalConfig = {\r\n  auth: {\r\n    clientId: \"134221c1-cab5-4f41-a81c-3c3e50b9a3eb\",\r\n    authority: \"https://login.microsoftonline.com/73caa82e-a2f5-4255-82f3-9f1b7c4208a0\",\r\n    redirectUri: \"https://192.168.60.112:3001/\",\r\n    knownAuthorities: ['https://login.microsoftonline.com/73caa82e-a2f5-4255-82f3-9f1b7c4208a0/oauth2/v2.0/token']\r\n  },\r\n\r\n};\r\n\r\n// Add scopes here for ID token to be used at Microsoft identity platform endpoints.\r\nexport const loginRequest = {\r\n  scopes: [\"User.Read\", \"User.ReadBasic.All\"]\r\n};\r\n\r\n// Add the endpoints here for Microsoft Graph API services you'd like to use.\r\nexport const graphConfig = {\r\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\r\n  graphGroupsEndpoint: \"https://graph.microsoft.com/v1.0/users\"\r\n};","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../authConfig\";\r\nimport {Nav} from \"react-bootstrap\";\r\n\r\n\r\n/**\r\n * Renders a button which, when selected, will open a popup for login\r\n */\r\nexport const SignInButton = () => {\r\n    const { instance } = useMsal();\r\n\r\n    const handleLogin = (loginType) => {\r\n        if (loginType === \"popup\") {\r\n            instance.loginPopup(loginRequest).catch(e => {\r\n                console.log(e);\r\n            });\r\n        }\r\n    }\r\n    return (\r\n         <Nav.Link variant=\"dark\" className=\"ml-auto\" onClick={() => handleLogin(\"popup\")}>Zaloguj</Nav.Link>\r\n    );\r\n}","import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport {Nav} from \"react-bootstrap\";\r\n\r\n/**\r\n * Renders a button which, when selected, will open a popup for logout\r\n */\r\nexport const SignOutButton = () => {\r\n    const { instance } = useMsal();\r\n\r\n    const handleLogout = (logoutType) => {\r\n        if (logoutType === \"popup\") {\r\n            instance.logoutPopup({\r\n                postLogoutRedirectUri: \"/\",\r\n                mainWindowRedirectUri: \"/\" // redirects the top level app after logout\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Nav.Link variant=\"light\" className=\"ml-auto\" onClick={() => handleLogout(\"popup\")}>Wyloguj</Nav.Link>\r\n    );\r\n}","import React from \"react\";\r\nimport {Nav} from \"react-bootstrap\";\r\n\r\n\r\n/**\r\n * Renders a button which, when selected, will open a popup for login\r\n */\r\nexport const UserProfileButton = ({children}) => {\r\n\r\n    return (\r\n         <Nav.Link href=\"/userprofile\" variant=\"dark\" className=\"ml-auto\" >{children}</Nav.Link>\r\n    );\r\n}","\r\nimport React from \"react\";\r\nimport { Container, Image, Nav, Row, Col, Navbar, NavDropdown, Badge } from 'react-bootstrap'\r\n\r\nimport { SignInButton } from \"./SignInButton\";\r\nimport { SignOutButton } from \"./SignOutButton\";\r\nimport { useIsAuthenticated, useMsal } from \"@azure/msal-react\";\r\nimport { UserProfileButton } from \"./UserProfileButton\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { } from '../store'\r\nfunction Header() {\r\n  const { accounts } = useMsal();\r\n  const isAuthenticated = useIsAuthenticated();\r\n  const profileName = accounts[0] && accounts[0].name;\r\n\r\n  const { dataComputersCount } = useSelector((state) => { return state.computers });\r\n  const { dataUsersCount } = useSelector((state) => { return state.users });\r\n\r\n  return (<>\r\n    <Row>\r\n      <Col>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Container>\r\n            <Navbar.Brand>\r\n              <Image\r\n                src=\"./images/Maflow.jpg\"\r\n                width=\"200\"\r\n                height=\"70\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"React Bootstrap logo\"\r\n              />\r\n            </Navbar.Brand>\r\n            <Navbar.Brand href=\"/home\">It hardware system</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"me-auto\">\r\n                {isAuthenticated ? <>\r\n                  <Nav.Link href=\"/logs\">Logi</Nav.Link>\r\n                  <Nav.Link href=\"/computers\">Sprzęt {dataComputersCount ? <Badge bg=\"secondary\">{dataComputersCount}</Badge> : ''}</Nav.Link>\r\n                  <Nav.Link href=\"/users\">Użytkownicy {dataUsersCount ? <Badge bg=\"secondary\">{dataUsersCount}</Badge> : ''}</Nav.Link>\r\n                  <NavDropdown title={profileName ? profileName : \"\"} id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\"><UserProfileButton>Profil</UserProfileButton></NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\"><SignOutButton /></NavDropdown.Item>\r\n                  </NavDropdown></> :\r\n                  <SignInButton />}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </Col>\r\n    </Row>\r\n  </>)\r\n}\r\nexport default Header;","import React,{useState,createContext} from 'react';\r\nconst LoginContext=createContext();\r\nfunction LoginProvider({children}){\r\n    const [userName,setUserName]=useState('');\r\n    const [isLogin,setIsLogin]=useState(true);  \r\n\r\nconst handleIsLogin=(logged)=>{\r\n    setIsLogin(logged)\r\n}    \r\nconst handleUserName=(username)=>{\r\n    setUserName(username)\r\n}\r\nconst valueContext={\r\n    handleIsLogin,\r\n    handleUserName,\r\n    isLogin,\r\n    userName,\r\n\r\n}\r\n\r\nreturn (\r\n<LoginContext.Provider  value={valueContext}>\r\n    {children}\r\n</LoginContext.Provider>\r\n)\r\n} \r\nexport {LoginProvider};\r\nexport default LoginContext;","import React from \"react\";\r\nimport {Card,ListGroup,Row} from 'react-bootstrap'\r\n/**\r\n * Renders information about the user obtained from Microsoft Graph\r\n */\r\nexport const ProfileData = (props) => {\r\n\r\n    return (\r\n        <Row className=\"p-2\"> \r\n        <Card style={{ width: '28rem' }}>\r\n        <Card.Title> Dane profilu  </Card.Title>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>Imię: {props.graphData.givenName}</ListGroup.Item>\r\n          <ListGroup.Item>Nazwisko: {props.graphData.surname}</ListGroup.Item>\r\n          <ListGroup.Item>Mail: {props.graphData.userPrincipalName}</ListGroup.Item>\r\n          <ListGroup.Item>Stanowisko: {props.graphData.jobTitle}</ListGroup.Item>\r\n          <ListGroup.Item>Telefon komórkowy: {props.graphData.mobilePhone}</ListGroup.Item>\r\n          <ListGroup.Item>Dzial: {props.graphData.officeLocation}</ListGroup.Item>\r\n        </ListGroup>\r\n        \r\n      </Card>\r\n     \r\n            \r\n          </Row>\r\n \r\n    );\r\n};","import React, { useState } from 'react';\r\nfunction Login() {\r\n  const [name, setName] = useState(\"\");\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert(`The name you entered was: ${name}`)\r\n  }\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Enter your name:\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  )\r\n}\r\nexport default Login","import React, { useEffect } from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { BrowserUtils } from \"@azure/msal-browser\";\r\n\r\n function Logout() {\r\n    const { instance } = useMsal();\r\n\r\n    useEffect(() => {\r\n        instance.logoutRedirect({\r\n            account: instance.getActiveAccount(),\r\n            onRedirectNavigate: () => !BrowserUtils.isInIframe()\r\n        })\r\n    }, [ instance ]);\r\n\r\n    return (\r\n        <div>Logout</div>\r\n    )\r\n}\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport { MdDelete, MdEdit, MdListAlt } from 'react-icons/md';\r\n\r\nexport default function TableBody({ columns, tableData, editRow, deleteRow, podgladRow, isLoading }) {\r\n\r\n    function isJsonObject(strData) {\r\n        try {\r\n            JSON.parse(strData);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    return (\r\n        <tbody>\r\n            {tableData.map((data,i) => {\r\n                return (<tr key={i} >\r\n                    { columns.map(({ accessor }) => {\r\n                        if (accessor === 'akcje') {\r\n                            return <td key={accessor}>\r\n                                <MdListAlt className='wskaznik' onClick={() => podgladRow(data)} title='Podgląd' >Podgląd</MdListAlt>\r\n                                <MdEdit className='wskaznik' onClick={() => editRow(data)} title='Edytuj' >Edytuj</MdEdit>\r\n                                <MdDelete className='wskaznik' onClick={() => deleteRow(data)} title='Usuń' >Delete</MdDelete>\r\n                            </td>\r\n                        }\r\n                        if (accessor === 'aplications') {\r\n                            if (isJsonObject(data[accessor])) {\r\n                                return <td key={accessor}>{\r\n                                    JSON.parse(data[accessor]).map((item, i) => {\r\n                                        return i === 0 ? item.label : \", \" + item.label\r\n                                    })}\r\n                                </td>\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tData = data[accessor] ? data[accessor] : \"-\";\r\n                            return <td key={accessor}>{tData}</td>\r\n                        }\r\n                        return null;\r\n        })}\r\n            </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n    )\r\n}\r\n","import { saveAs } from \"file-saver\";\r\nimport React from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Button } from \"react-bootstrap\";\r\nexport const Inwentaryzacja=({ apiData, fileName })=> {\r\n    const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"light\" size=\"sm\" onClick={(e) => exportToCSV(apiData, fileName)}>Export xlsx</Button>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Table, Pagination, Form, Row, Col } from \"react-bootstrap\";\r\nimport { setTableRowsPerPage } from \"../store\"\r\nimport { TableHeader, TableBody } from \"../Components\";\r\nimport { Inwentaryzacja } from \"../Reports/Inwetnaryzacja\";\r\n\r\nexport default function TableCustom({\r\n    data, columns, sortField, sortOrder, handleSort, deleteRow, editRow, podgladRow,isLoading\r\n/* rowsPerPage,handleSetRowsPerPage*/ }) {\r\n    const dispatch = useDispatch();\r\n    const { rowsPerPage } = useSelector((state) => { return state.customTable });\r\n    const localDate = new Date().toLocaleDateString('en-GB');\r\n    const fileName = \"Raport_\" + localDate;\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [countPages, setCountPages] = useState(Math.ceil(data.length / rowsPerPage));\r\n    const [sliceData, setSliceData] = useState([]);\r\n    const [showMore, setShowMore] = useState(0);\r\n    const [range] = useState(parseInt(4));\r\n\r\n    useEffect(() => {\r\n        // console.log('useEffect')\r\n        if\r\n            (currentPage === 0) setSliceData(data.slice(0, rowsPerPage))\r\n        else\r\n            setSliceData(data.slice(currentPage * rowsPerPage, currentPage * rowsPerPage + rowsPerPage))\r\n    },\r\n        [currentPage, rowsPerPage, sortField, sortOrder, showMore])\r\n\r\n    const handleChangeCurrentPage = (page) => {\r\n        console.log(page)\r\n        setCurrentPage(page);\r\n    }\r\n    const handleChangeRowsPerPage = (e) => {\r\n        const newRowsPerPage = parseInt(e.target.value);\r\n        const newCountPages = Math.ceil(data.length / newRowsPerPage);\r\n        e.preventDefault();\r\n        dispatch(setTableRowsPerPage(newRowsPerPage));\r\n        if (newCountPages < countPages) {\r\n            setCurrentPage(0);\r\n        }\r\n        setCountPages(newCountPages);\r\n    }\r\n    const handlePrev = () => {\r\n        if (currentPage > range)\r\n            setCurrentPage(currentPage - 1);\r\n    }\r\n\r\n    const itemsPagination = Array(countPages).fill(\"\").map((_, i) => {\r\n        return <Pagination.Item style={{ color: \"green\" }} key={i}\r\n            active={i === currentPage} onClick={() => { handleChangeCurrentPage(i) }}>\r\n            {i + 1}</Pagination.Item>\r\n    });\r\n    return (<>\r\n        {/* {console.log(currentPage,rowsPerPage,countPages,sliceData)} */}\r\n        <Table responsive striped bordered hover size=\"sm\">\r\n            <TableHeader columns={columns} sortField={sortField} sortOrder={sortOrder} handleSorting={handleSort} isLoading={isLoading} />\r\n            <TableBody columns={columns} tableData={sliceData}\r\n                podgladRow={podgladRow}\r\n                editRow={editRow}\r\n                deleteRow={deleteRow}\r\n                isLoading={isLoading}\r\n            />\r\n        </Table>\r\n        <Row>\r\n            <Col sm={1}>\r\n                <Form.Select size=\"sm\" aria-label=\"Default select example\" onChange={handleChangeRowsPerPage} >\r\n                    <option value=\"\" disabled>Ilość</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"30\">30</option>\r\n                </Form.Select>\r\n            </Col>\r\n            <Col>\r\n                <Pagination style={{ font: \"black\" }} size=\"sm\">\r\n                    <Pagination.First onClick={() => setCurrentPage(0)} />\r\n                    <Pagination.Prev onClick={() => handlePrev()} />\r\n                    <Pagination.Ellipsis onClick={showMore >= range ? () => setShowMore(s => s -= range) : null} />\r\n                    {itemsPagination.slice(showMore, showMore + range)}\r\n                    <Pagination.Ellipsis onClick={showMore < (countPages - range) ? () => setShowMore(s => s += range) : null} />\r\n                    <Pagination.Next onClick={currentPage < countPages - 1 ? () => setCurrentPage(currentPage + 1) : null} />\r\n                    <Pagination.Last onClick={() => setCurrentPage(countPages - 1)} />\r\n                </Pagination>\r\n            </Col>\r\n            <Col sm={1}>\r\n                <Inwentaryzacja apiData={data} fileName={fileName} />\r\n            </Col>\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {FaArrowAltCircleDown,FaArrowAltCircleUp} from 'react-icons/fa';\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nexport default  function TableHeader({columns,handleSorting,sortField,sortOrder,isLoading}){\r\n\r\n    const handleSortingChange=(accessor)=>{\r\n        console.log(accessor);\r\n        const newSortOrder=accessor===sortField && sortOrder ===\"asc\" ? \"desc\" : \"asc\";\r\n        handleSorting(accessor,newSortOrder); \r\n    }\r\n    return (\r\n\r\n        <thead>\r\n            <tr key={nanoid(1)}>\r\n                {columns.map(({label,accessor,sortable})=>{\r\n                    const iconSort=sortable ?\r\n                        sortField===accessor && sortOrder ===\"asc\"\r\n                        ? <FaArrowAltCircleUp/>\r\n                        :sortField===accessor && sortOrder ===\"desc\"\r\n                        ? <FaArrowAltCircleDown/>\r\n                        : <FaArrowAltCircleUp/>\r\n                        :\"\";\r\n                   \r\n                    return <th \r\n                    key={accessor} \r\n                    onClick={sortable ? ()=>handleSortingChange(accessor) : null}>\r\n                    {label} {iconSort}\r\n                    </th>\r\n                })}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport {addUser} from '../store'\r\nimport React,{useState} from 'react';\r\nimport { Form,Modal,Button, Alert } from 'react-bootstrap';\r\nimport { useMsal } from \"@azure/msal-react\";\r\n\r\nfunction UserFormAdd({show,close}){\r\n    const dispatch=useDispatch();\r\n    const {accounts}=useMsal()\r\n    const [owner]=useState(accounts[0].username);\r\n    const [userNameError, setUserNameError] = useState(\"\");\r\n    const [inputs, setInputs] = useState({ name:\"\",login:\"\",email:\"\",rcp:\"\",dzial:\"\",owner});\r\n\r\n\r\n \r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value,owner}));\r\n       \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      // const passwordPattern = /^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/;\r\n      const namePattern = /^(?=.*[a-zA-Z])/;\r\n      if (!namePattern.test(inputs.name)) {\r\n        setUserNameError(\"Pole musi zawierać conajmniej 1 literę\");\r\n        return;\r\n      }\r\n      dispatch(addUser(inputs))\r\n      close()\r\n      }\r\n    return (\r\n    <>\r\n    <Modal show={show}>\r\n        <Modal.Header closeButton onClick={close}>\r\n          <Modal.Title>Dodaj użytkownika</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Imię Nazwisko\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                value={inputs.name}\r\n                autoFocus\r\n              />\r\n            </Form.Group>\r\n            {userNameError && <Alert>{userNameError}</Alert>}\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Login\"\r\n                name=\"login\"\r\n                onChange={handleChange}\r\n                value={inputs.login}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                value={inputs.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Dział\"\r\n                name=\"dzial\"\r\n                onChange={handleChange}\r\n                value={inputs.dzial}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Rcp\"\r\n                value={inputs.rcp}\r\n                name=\"rcp\"\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                hidden={true}\r\n                type=\"text\"\r\n                placeholder=\"Owner\"\r\n                value={owner}\r\n                disabled={true}\r\n                name=\"owner\"\r\n              />\r\n            </Form.Group>\r\n       \r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"light\" onClick={close}>\r\n            Zamknij\r\n          </Button>\r\n          <Button type='submit' variant=\"light\" onClick={handleSubmit}>\r\n            Dodaj\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserFormAdd;","import { useDispatch } from 'react-redux';\r\nimport {updateUser} from '../store'\r\nimport React,{useState} from 'react';\r\nimport { Form,Modal,Button,Alert } from 'react-bootstrap';\r\nimport { useMsal } from \"@azure/msal-react\";\r\nexport default function UserFormEdit({show,close,user}){\r\n  const { accounts } = useMsal()\r\n  const [updater] = useState(accounts[0].username);\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const dispatch=useDispatch();\r\n \r\n    const [inputs, setInputs] = useState({\r\n      name:user.name,\r\n      login:user.login,\r\n      rcp:user.rcp,\r\n      dzial:user.dzial,\r\n      email:user.email,\r\n      id:user.id\r\n      });\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value,id:user.id,updater}));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      const NamePattern = /^(?=.*[a-zA-Z])/;\r\n      if (!NamePattern.test(inputs.name)) {\r\n        setNameError(\"Pole musi zawierać conajmniej 1 literę\");\r\n        return;\r\n      }\r\n      console.log(inputs)\r\n      dispatch(updateUser(inputs))\r\n    \r\n      close()\r\n      }\r\n    \r\n     \r\n  return (\r\n    <>\r\n    <Modal show={show}>\r\n        <Modal.Header closeButton onClick={close}>\r\n          <Modal.Title>Edytuj</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={inputs.name}\r\n                onChange={handleChange}\r\n                autoFocus\r\n              />\r\n            </Form.Group>\r\n            {nameError && <Alert>{nameError}</Alert>}\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"login\"\r\n                onChange={handleChange}\r\n                value={inputs.login}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                value={inputs.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"dzial\"\r\n                onChange={handleChange}\r\n                value={inputs.dzial}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Rcp\"\r\n                onChange={handleChange}\r\n                value={inputs.rcp}\r\n                name=\"rcp\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"info\" onClick={close}>\r\n            Close\r\n          </Button>\r\n          <Button type='submit' variant=\"success\" onClick={handleSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    \r\n        </>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nexport default function UserInventoryShowModal({ show, close, userComputer }) {\r\n  return (\r\n    <Modal size=\"lg\" dialogClassName=\"modal-dialog\" show={show}>\r\n      <Modal.Header>\r\n        <Modal.Title><h5>Wyposażenie użytkownika</h5>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {userComputer.computerName}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"light\" onClick={close}>\r\n          Zamknij\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\n/**\r\n * Renders information about the user obtained from Microsoft Graph\r\n */\r\nexport default function (props){\r\n    return (\r\n        <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>displayName</th>\r\n            <th>givenName</th>\r\n            <th>jobTitle</th>\r\n            <th>mail</th>\r\n            <th>mobilePhone</th>\r\n            <th>officeLocation</th>\r\n            <th>preferredLanguage</th>\r\n            <th>surname</th>\r\n            <th>userPrincipalName</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {props.groupData.map((user,i)=>{\r\n            return (\r\n          <tr key={user.id}>\r\n            <td>{user.id}</td>\r\n            <td>{user.displayName}</td>\r\n            <td>{user.givenName}</td>\r\n            <td>{user.jobTitle}</td>\r\n            <td>{user.mail}</td>\r\n            <td>{user.mobilePhone}</td>\r\n            <td>{user.officeLocation}</td>\r\n            <td>{user.preferredLanguage}</td>\r\n            <td>{user.surname}</td>\r\n            <td>{user.userPrincipalName}</td>\r\n          </tr>\r\n            )\r\n        })}\r\n        \r\n        </tbody>\r\n      </Table>      \r\n    );\r\n};","import { styled, keyframes } from \"styled-components\";\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nexport const RotateThing = styled.div`\r\n  display: inline-block;\r\n  margin-left: 40%;\r\n  margin-top: 10%;\r\n  animation: ${rotate} 1s linear infinite;\r\n  padding: 2rem 1rem;\r\n  font-weight: 500;\r\n  background-image:url(\"./images/Maflow.jpg\");\r\n  background-position: center;\r\n  background-repeat:no-repeat;\r\n  background-size: 230px;\r\n  border:3px rgb(6,6,6) dotted ;\r\n  width: 200px;\r\n  height: 200px;\r\n  text-align: center;\r\n  border-radius: 100px;\r\n  text-transform: uppercase;\r\n  font-size: 2rem;\r\n  text-shadow: 5px silver;\r\n`;","import { saveAs } from \"file-saver\";\r\nimport { Document, Packer, Paragraph, TextRun,TableCell,TableRow,WidthType,Table as T} from \"docx\";\r\nexport const ProtokolKomputer=(item)=> {\r\n \r\n    // if( isJsonObject(data[accessor])){\r\n    //     return <td key={accessor}>{\r\n    //         JSON.parse(data[accessor]).map((item,i) => {\r\n    //             return i===0?item.value:\", \"+item.value  })}\r\n    //         </td>\r\n\r\n    const result1 = new Date().toLocaleDateString('en-GB');\r\n    const TabelaNaglowek = new T({\r\n        columnWidths: [3505, 5505],\r\n        rows: [\r\n            new TableRow({\r\n                children: [\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Obrazek Maflow\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 10015,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Protokół instalacji i powierzenia komputera\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"FI1.I2.F1\")],\r\n                    }),\r\n                ],\r\n            }),\r\n           ],\r\n    });\r\n\r\n    const TabelaOpracowal = new T({\r\n        columnWidths: [3505, 5505],\r\n        rows: [\r\n            new TableRow({\r\n                children: [\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Rev.\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Data\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Opis zmian\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Opracował\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Zatwierdził\")],\r\n                    }),\r\n                ],\r\n            }),\r\n            new TableRow({\r\n                children: [\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"01\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"10.07.2018\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Opracowanie dokumentu\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"L.Barszczewski\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"A.Podlipski\")],\r\n                    }),\r\n                ],\r\n            }),\r\n           ],\r\n    });\r\n\r\n    \r\n    const rowsTabelaSpecyfikacjaKomputera= JSON.parse(item.aplications).map((v,i)=>{\r\n        return new TableRow({\r\n            children: [\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3505,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph((i+1).toString())],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3505,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(v.label)],\r\n                }),\r\n               \r\n            ],\r\n        })\r\n    })\r\n\r\n    const TabelaSpecyfikacjaKomputera = new T({\r\n        columnWidths: [3505, 5505],\r\n        rows: [\r\n            new TableRow({\r\n                children: [\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"LP.\")],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(\"Nazwa\")],\r\n                    }),\r\n                ],\r\n            })\r\n            ,...rowsTabelaSpecyfikacjaKomputera\r\n        ]\r\n    });\r\n    \r\n\r\n const doc = new Document({\r\n    \r\n    creator: item.owner,\r\n    description: \"Protokół  przekazania komputera \" ,\r\n    title: \"Protokół przekazania komputera \" + item.computerName,\r\n    styles: {\r\n        paragraphStyles: [\r\n            {\r\n                id: \"MySpectacularStyle\",\r\n                name: \"My Spectacular Style\",\r\n                basedOn: \"Heading1\",\r\n                next: \"Heading1\",\r\n                quickFormat: true,\r\n                run: {\r\n                    italics: true,\r\n                    color: \"990000\",\r\n                },\r\n            },\r\n        ],\r\n    },\r\n    sections: [\r\n        {\r\n            properties: {},\r\n            children: [\r\n                \r\n                TabelaNaglowek,\r\n                new Paragraph({}),\r\n                TabelaOpracowal,\r\n                new Paragraph({}),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun(\"Toruń, dn \"+ result1)\r\n                    ],\r\n                }),\r\n                new Paragraph({}),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text:\"PROTOKÓŁ INSTALACJI I POWIERZENIA Z OBOWIĄZKIEM ZWROTU KOMPUTERA \",\r\n                            bold: true,\r\n                        }),\r\n                    ],\r\n                }),\r\n                new Paragraph({}),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: `Boryszew S.A. Oddział Maflow w Tychach z siedzibą w Tychach, ul. Serdeczna 42,43-100 Tychy, KRS 63824, REGON: 750010992, NIP: 8370000634, kapitał zakładowy 240.000.000 zł, opłacony w całości, zwany dalej: „Maflow” powierza Urządzenie z obowiązkiem zwrotu:`\r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n          \r\n                new Paragraph({}),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun(\"Identyfikator użytkownika Windows:\")\r\n                    ],\r\n                }),\r\n           \r\n                \r\n            \r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Użytkownik \"+ item.userName + \" ,dalej jako użytkownik RCP ID:\",\r\n                        \r\n                        }),\r\n                        new TextRun({\r\n                            text: item.userRcp,\r\n                            bold: true,\r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Identyfikator użytkownika Windows:\",\r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Identyfikator użytkownika Poczty : \"+item.email,\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Nazwa Komputera: \"+item.computerName,\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"SPECYFIKACJA URZĄDZENIA :\",\r\n                            bold:true\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Typ komputera : \" + item.typ,\r\n                            bold:true\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Model komputera : \" + item.model,\r\n                            bold:true\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Numer seryjny komputera : \" + item.sn,\r\n                            bold:true\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"RAM : \" + item.ram,\r\n                            bold:true\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Nr inwentarzowy/leasing : \" + item.sn,\r\n                            bold:true\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"Orientacyjna wartość : \" + item.wartosc +\"tyś\",\r\n                            bold:true\r\n                           \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: `dalej jako : \"Urządzenie\" lub \"Komputer\"`,  \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"SPECYFIKACJA OPROGRAMOWANIA: \",\r\n                            bold:true  \r\n                        }),\r\n                   \r\n                    ],\r\n                }),\r\n                TabelaSpecyfikacjaKomputera\r\n\r\n            ],\r\n        },\r\n    ],\r\n});\r\n\r\nPacker.toBlob(doc).then(blob => {\r\n    console.log(blob);\r\n    saveAs(blob, \"protokol przekazania komputera \"+item.computerName +\".docx\");\r\n    console.log(\"Document created successfully\");\r\n  });\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { fetchComputers, deleteComputer, searchComputer, sortComputers, updateComputer, addComputer, closeToast } from '../store';\r\nimport useThunk from '../Hooks/useThunk';\r\nimport { ProtokolKomputer } from '../Reports/ProtokolKomputer';\r\nimport { TableCustom, CustomToast, ComputerFormEdit, ComputerFormAdd, RotateThing} from '../Components';\r\nexport default function ComputersScreen() {\r\n    const [doFetchComputers, isLoadingComputers, isErrorComputers] = useThunk(fetchComputers);\r\n    const [doUpdateComputer, isLoadingUpdateComputer, isErrorUpdaterComputer] = useThunk(updateComputer);\r\n    const [doAddComputer, isLoadingAddComputer, isErrorAddComputer] = useThunk(addComputer);\r\n    const [doDeleteComputer, isLoadingDeleteComputer, isErrorDeleteComputer] = useThunk(deleteComputer);\r\n    const [showComputerAddModal, setComputerAddModal] = useState(false);\r\n    const [showComputerEditModal, setComputerEditModal] = useState(false);\r\n    const [computer, setComputer] = useState();\r\n    const { dataComputers, search, sortField, sortOrder, showToast, msgToast } = useSelector((state) => { return state.computers });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        doFetchComputers();\r\n    }, [dispatch, search])\r\n\r\n    const handleComputerAdd = () => {\r\n        setComputerAddModal(true);\r\n    }\r\n\r\n    const handleCloseAddModal = () => {\r\n        setComputerAddModal(false);\r\n    }\r\n    const handleCloseEditModal = () => {\r\n        setComputerEditModal(false);\r\n    }\r\n    const handleDelete = (item) => {\r\n        console.log(item)\r\n        doDeleteComputer(item);\r\n    }\r\n    const handleEdit = (item) => {\r\n        setComputerEditModal(true);\r\n        setComputer(item)\r\n    }\r\n    const handleSearch = (e) => {\r\n        dispatch(searchComputer(e.target.value))\r\n        return;\r\n    }\r\n    const handleSort = (sortField, sortOrder) => {\r\n        console.log(sortOrder, sortField)\r\n        dispatch(sortComputers({ sortField, sortOrder }))\r\n        return;\r\n    }\r\n\r\n    const handleEditSubmit = (item) => {\r\n        doUpdateComputer(item);\r\n    }\r\n    const handleAddSubmit = (item) => {\r\n        doAddComputer(item);\r\n    }\r\n    const handleCloseToast = () => {\r\n        dispatch(closeToast());\r\n    }\r\n\r\n    let content;\r\n    if (isLoadingComputers || isLoadingUpdateComputer || isLoadingAddComputer || isLoadingDeleteComputer) {\r\n        content = <RotateThing/>\r\n    }\r\n    else if (isErrorComputers || isErrorUpdaterComputer || isErrorAddComputer || isErrorDeleteComputer) {\r\n        content = <div>Error...</div>\r\n    } else {\r\n        const columns = [\r\n            { label: \"Id\", accessor: \"computer_id\", sortable: false },\r\n            { label: \"Name\", accessor: \"computerName\", sortable: true },\r\n            { label: \"Login\", accessor: \"userName\", sortable: true },\r\n            { label: \"Typ\", accessor: \"typ\", sortable: true },\r\n            { label: \"SN\", accessor: \"sn\", sortable: true },\r\n            { label: \"System\", accessor: \"systemName\", sortable: true },\r\n            { label: \"Dodał\", accessor: \"owner\", sortable: true },\r\n            { label: \"Aplikacje\", accessor: \"aplications\", sortable: false },\r\n            { label: \"Data utworzenie\", accessor: \"created_at\", sortable: true },\r\n            { label: \"Data aktualizacji\", accessor: \"updated_at\", sortable: true },\r\n            { label: \"Akcje\", accessor: \"akcje\", sortable: false }\r\n        ]\r\n        content =\r\n            <TableCustom data={dataComputers} columns={columns} sortField={sortField} sortOrder={sortOrder} handleSort={handleSort} deleteRow={handleDelete} editRow={handleEdit} podgladRow={ProtokolKomputer}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showToast && <CustomToast showToast={showToast} msg={msgToast} closeToast={handleCloseToast} />}\r\n            {showComputerAddModal && <ComputerFormAdd show={showComputerAddModal} close={handleCloseAddModal} handleAddSubmit={handleAddSubmit} />}\r\n            {showComputerEditModal && <ComputerFormEdit computer={computer} show={showComputerEditModal} close={handleCloseEditModal} handleEditSubmit={handleEditSubmit} />}\r\n\r\n            <Button variant='light' onClick={handleComputerAdd}><MdAdd />Dodaj Sprzęt</Button>\r\n\r\n            <Container className='p-2'>\r\n                <Form onSubmit={(e) => { e.preventDefault() }}>\r\n                    <Form.Control name=\"search\" value={search} placeholder='Szukaj ...' onChange={handleSearch}></Form.Control></Form>\r\n                {content}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { fetchSystems, fetchUsers, fetchComputers, fetchLogs } from \"../store\";\r\nimport { styled } from \"styled-components\";\r\nimport { RotateThing } from \"../Components\";\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nalign-items: start;\r\nflex-direction: column;\r\n`;\r\n\r\nconst Slupek = styled.div.attrs(props => ({\r\n  $widthSlupek: props.$width\r\n}))`\r\nheight:70px;\r\nwidth:calc( (${props => props.$widthSlupek}/1000)*100% - 10%);\r\nbackground-color:#ddd;\r\nborder: solid black 1px;\r\ntext-align: center;\r\nmargin: 5px;\r\np{text-orientation: mixed;};\r\n&:hover{background-color:silver;};\r\n`;\r\n\r\nexport default function HomeScreen() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchSystems());\r\n    dispatch(fetchUsers());\r\n    dispatch(fetchComputers());\r\n    dispatch(fetchLogs());\r\n  }, [dispatch])\r\n  const { dataComputers } = useSelector((state) => { return state.computers });\r\n  const { dataSystems } = useSelector((state) => { return state.systems });\r\n  const { dataLogs } = useSelector((state) => { return state.logs });\r\n  const { dataUsers, isLoading } = useSelector((state) => { return state.users });\r\n  const arrayToRender = [\r\n    { \"count\": dataComputers, \"counted\": \"Komputery\" },\r\n    { \"count\": dataSystems, \"counted\": \"Systems\" },\r\n    { \"count\": dataLogs, \"counted\": \"Logi\" },\r\n    { \"count\": dataUsers, \"counted\": \"Użytkownicy\" },\r\n  ];\r\n\r\n  const getLength = (item) => {\r\n    return { ...item, count: item.count.length, width: parseInt(item.count.length) };\r\n  }\r\n  let content;\r\n  if (isLoading) {\r\n    content= <RotateThing/>\r\n  }else{\r\n   content = arrayToRender.map(getLength).reverse().map((item) => {\r\n    return <Slupek key={nanoid()} $width={item.width}><h5>{item.counted}</h5>Ilość:{item.count}</Slupek>\r\n  });}\r\n  return (\r\n    <Wrapper>\r\n      {console.log(dataComputers.length > 0 && Date(dataComputers[0].updated_at))}\r\n      {content}\r\n    </Wrapper>\r\n  )\r\n}","import React,{ useEffect }  from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { fetchLogs, filterRun, filtersClear, sortLogs } from \"../store\";\r\nimport useThunk from \"../Hooks/useThunk\";\r\nimport { TableCustom, RotateThing } from \"../Components\";\r\nexport default function LogsScreen() {\r\n    const { filters, filteredData, sortField, sortOrder } = useSelector(state => state.logs);\r\n    const [doFetchLogs, isLoadingLogs, isErrorLogs] = useThunk(fetchLogs);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        doFetchLogs()\r\n    }, [dispatch, filters])\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        dispatch(filterRun({ ...filters, [name]: value }))\r\n    }\r\n    const handleSort = (sortField, sortOrder) => {\r\n        console.log(sortOrder, sortField);\r\n        dispatch(sortLogs({ sortField, sortOrder }));\r\n        return;\r\n    }\r\n\r\n    let content, contentFilters;\r\n    if (isLoadingLogs) {\r\n        content = <RotateThing/>\r\n    }\r\n    else if (isErrorLogs) {\r\n        content = <div>Error...</div>\r\n    } else {\r\n        const columns = [\r\n            { label: \"Id\", accessor: \"id\", sortable: false },\r\n            { label: \"Tablea\", accessor: \"tabela\", sortable: true },\r\n            { label: \"Id tabeli\", accessor: \"id_tabeli\", sortable: true },\r\n            { label: \"Akcja\", accessor: \"akcja\", sortable: true },\r\n            { label: \"Co\", accessor: \"co\", sortable: true },\r\n            { label: \"Kto\", accessor: \"kto\", sortable: true },\r\n            { label: \"Czas\", accessor: \"czas\", sortable: true },\r\n        ]\r\n        content =\r\n            <TableCustom data={filteredData} columns={columns} sortOrder={sortOrder}\r\n                sortField={sortField} handleSort={handleSort}\r\n            />\r\n    }\r\n    const tabele = filteredData.map(data => data.tabela)\r\n    let unikalne_tabele = [...new Set(tabele)]\r\n    const akcje = filteredData.map(data => data.akcja)\r\n    let unikalne_akcje = [...new Set(akcje)]\r\n    const ktosie = filteredData.map(data => data.kto)\r\n    let unikalne_ktosie = [...new Set(ktosie)]\r\n\r\n    const cosie = filteredData.map(data => data.co)\r\n    let unikalne_cosie = [...new Set(cosie)]\r\n    contentFilters = <>\r\n\r\n        <Col>\r\n            <Form.Label>Tabela</Form.Label>\r\n            <Form.Select onChange={handleChange} name=\"tabela\" value={filters.tabela}>\r\n                <option key=\"k\" value=\"\">Wszystkie</option>\r\n                {unikalne_tabele.map((t, i) => {\r\n                    return <option key={i}>{t}</option>\r\n                })}\r\n            </Form.Select>\r\n        </Col>\r\n        <Col>\r\n            <Form.Label>Nazwa</Form.Label>\r\n            <Form.Select onChange={handleChange} name=\"nazwa\" value={filters.nazwa} placeholder=\"Nazwa\">\r\n                <option key=\"k\" value=\"\" selected>Wszystkie</option>\r\n                {unikalne_cosie.map((t, i) => {\r\n                    return <option key={i}>{t}</option>\r\n                })}\r\n            </Form.Select>\r\n        </Col>\r\n        <Col>\r\n            <Form.Label>Akcja</Form.Label>\r\n            <Form.Select onChange={handleChange} name=\"akcja\" value={filters.akcja}>\r\n                <option key=\"k\" value=\"\">Wszystkie</option>\r\n                {unikalne_akcje.map((t, i) => {\r\n                    return <option key={i}>{t}</option>\r\n                })}\r\n            </Form.Select>\r\n        </Col>\r\n        <Col>\r\n            <Form.Label>Kto zmieniał</Form.Label>\r\n            <Form.Select onChange={handleChange} name=\"kto\" value={filters.kto}>\r\n                <option key=\"k\" value=\"\">Wszystkie</option>\r\n                {unikalne_ktosie.map((t, i) => {\r\n                    return <option key={i}>{t}</option>\r\n                })}\r\n            </Form.Select>\r\n        </Col>\r\n        <Col>\r\n\r\n\r\n            <Button onClick={() => dispatch(filtersClear())} variant=\"dark\" size=\"sm\">Czyść filtry</Button>\r\n\r\n        </Col>\r\n\r\n    </>\r\n    return (\r\n        <Container>\r\n\r\n            <Row>\r\n\r\n                {contentFilters}\r\n            </Row>\r\n            <Row>\r\n                {content}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Button, Container, Form, Alert } from 'react-bootstrap';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchComputers, fetchUsers, searchUser, getDataComputerByUserId, getDataUserById, deleteUser, sortUsers } from '../store'\r\nimport useThunk from '../Hooks/useThunk';\r\nimport { TableCustom, RotateThing, UserFormEdit, UserFormAdd, UserInventoryShowModal } from '../Components';\r\n\r\nexport default function UsersScreen() {\r\n  const [doFetchUsers, isLoadingUsers, isErrorUsers] = useThunk(fetchUsers);\r\n  const [showUserAddModal, setUserAddModal] = useState(false);\r\n  const [showUserEditModal, setUserEditModal] = useState(false);\r\n  const [showInventoryShowModal, setShowInventoryShowModal] = useState(false);\r\n  const { dataUsers, dataUser, search, sortField, sortOrder } = useSelector((state) => { return state.users });\r\n  const { dataComputerByUserId } = useSelector((state) => { return state.computers });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    doFetchUsers()\r\n  }, [dispatch, search])\r\n  useEffect(() => {\r\n    dispatch(fetchComputers())\r\n  }, [dispatch])\r\n  const handleComputerAdd = () => {\r\n    setUserAddModal(true);\r\n\r\n  }\r\n  const handleCloseAddModal = () => {\r\n    setUserAddModal(false);\r\n  }\r\n  const handleCloseEditModal = () => {\r\n    setUserEditModal(false);\r\n  }\r\n  const handleCloseInventoryShowModal = () => {\r\n    setShowInventoryShowModal(false)\r\n  }\r\n  const handleDelete = (item) => {\r\n    alert(\"Czy napewno chcesz usunąć ten komputer ?\")\r\n    dispatch(deleteUser(parseInt(item.id)))\r\n\r\n  }\r\n  const handleEdit = (item) => {\r\n    dispatch(getDataUserById(parseInt(item.id)))\r\n    setUserEditModal(true);\r\n\r\n  }\r\n  const handlePodglad = (item) => {\r\n    dispatch(getDataComputerByUserId(parseInt(item.id)))\r\n    setShowInventoryShowModal(true)\r\n  }\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value)\r\n    dispatch(searchUser(e.target.value))\r\n    return;\r\n  }\r\n  const handleSort = (sortField, sortOrder) => {\r\n    console.log(sortOrder, sortField)\r\n    dispatch(sortUsers({ sortField, sortOrder }))\r\n    return;\r\n  }\r\n\r\n  let content;\r\n  if (isLoadingUsers) {\r\n     content = <RotateThing/>\r\n  } else if (isErrorUsers) {\r\n    content = <Alert variant='danger'>Błąd podczas pobierania użytkowników</Alert>\r\n  }\r\n  else {\r\n    const columns = [\r\n      { label: \"Id\", accessor: \"id\", sortable: false },\r\n      { label: \"Name\", accessor: \"name\", sortable: true },\r\n      { label: \"Login\", accessor: \"login\", sortable: true },\r\n      { label: \"Rcp\", accessor: \"rcp\", sortable: true },\r\n      { label: \"Dział\", accessor: \"dzial\", sortable: true },\r\n      { label: \"Email\", accessor: \"email\", sortable: true },\r\n      { label: \"Dodał\", accessor: \"owner\", sortable: true },\r\n      { label: \"Data utworzenie\", accessor: \"created_at\", sortable: true },\r\n      { label: \"Data aktualizacji\", accessor: \"updated_at\", sortable: true },\r\n      { label: \"Akcje\", accessor: \"akcje\", sortable: false }\r\n    ]\r\n    content =\r\n      <TableCustom data={dataUsers} columns={columns} sortField={sortField} sortOrder={sortOrder} handleSort={handleSort} deleteRow={handleDelete} editRow={handleEdit} podgladRow={handlePodglad} />\r\n  }\r\n  return (\r\n    <>\r\n      {showUserAddModal && <UserFormAdd user={dataUser ? dataUser : {}} show={showUserAddModal} close={handleCloseAddModal} />}\r\n      {showUserEditModal && <UserFormEdit user={dataUser ? dataUser : {}} show={showUserEditModal} close={handleCloseEditModal} />}\r\n      {showInventoryShowModal && <UserInventoryShowModal userComputer={dataComputerByUserId ? dataComputerByUserId : {}} show={showInventoryShowModal} close={handleCloseInventoryShowModal} />}\r\n      <Button variant='light' onClick={handleComputerAdd}><MdAdd />Dodaj Użytkownika</Button>\r\n\r\n      <Container className='p-2'>\r\n\r\n        <Form onSubmit={(e) => { e.preventDefault() }}>\r\n          <Form.Control name=\"search\" value={search} placeholder='Szukaj ...' onChange={handleSearch}></Form.Control></Form>\r\n        {content}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { graphConfig } from \"./authConfig\";\r\n\r\n/**\r\n * Attaches a given access token to a Microsoft Graph API call. Returns information about the user\r\n */\r\nexport async function callMsGraph(accessToken) {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n    headers.append(\"Authorization\", bearer);\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n    return fetch(graphConfig.graphMeEndpoint, options)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport async function callGroupGraph(accessToken) {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n    headers.append(\"Authorization\", bearer);\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n    return fetch(graphConfig.graphGroupsEndpoint, options)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from \"../authConfig\";\r\nimport { ProfileData } from '../Components/ProfileData';\r\nimport { callMsGraph } from \"../graph\";\r\nimport { Container } from \"react-bootstrap\";\r\nexport default function UserProfileScreen() {\r\n    const { instance, accounts } = useMsal();\r\n    const [graphData, setGraphData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        RequestProfileData()\r\n    }, []);\r\n    function RequestProfileData() {\r\n        const request = {\r\n            ...loginRequest,\r\n            account: accounts[0]\r\n        };\r\n\r\n        // Silently acquires an access token which is then attached to a request for Microsoft Graph data\r\n        instance.acquireTokenSilent(request).then((response) => {\r\n            callMsGraph(response.accessToken).then(response => setGraphData(response));\r\n        }).catch((e) => {\r\n            instance.acquireTokenPopup(request).then((response) => {\r\n                callMsGraph(response.accessToken).then(response => setGraphData(response));\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {graphData && <ProfileData graphData={graphData} />}\r\n        </Container>\r\n    );\r\n}\r\n","\nimport './App.css';\nimport React from 'react';\nimport { Container } from 'react-bootstrap'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Login, Logout, Header, CustomCarousel } from './Components';\nimport { AuthenticatedTemplate, UnauthenticatedTemplate } from \"@azure/msal-react\";\nimport { ComputersScreen, HomeScreen, LogsScreen, UsersScreen, UserProfileScreen } from './Screens';\nfunction App() {\n  return (\n    <Container>\n      <Header />\n      <UnauthenticatedTemplate>\n        <CustomCarousel />\n      </UnauthenticatedTemplate>\n      <AuthenticatedTemplate>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<HomeScreen />} />\n            <Route path=\"/logs\" element={<LogsScreen />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/logout\" element={<Logout />} />\n            <Route path=\"/computers\" element={<ComputersScreen />} />\n            <Route path=\"/userprofile\" element={<UserProfileScreen />} />\n            <Route path=\"/users\" element={<UsersScreen />} />\n          </Routes>\n        </BrowserRouter>\n\n      </AuthenticatedTemplate>\n    </Container>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\nimport { Provider } from 'react-redux';\nimport store from './store'\nconst msalInstance = new PublicClientApplication(msalConfig);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n\n  <React.StrictMode>\n    <MsalProvider instance={msalInstance}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </MsalProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}